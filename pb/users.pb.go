// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.19.4
// source: users.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// RecoveryToken is a recovery account for logging into the console without a
// functioning Pomerium proxy
type RecoveryToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace  string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	ExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	PublicKey  string                 `protobuf:"bytes,6,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *RecoveryToken) Reset() {
	*x = RecoveryToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveryToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveryToken) ProtoMessage() {}

func (x *RecoveryToken) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveryToken.ProtoReflect.Descriptor instead.
func (*RecoveryToken) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{0}
}

func (x *RecoveryToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecoveryToken) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RecoveryToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RecoveryToken) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *RecoveryToken) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *RecoveryToken) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// GroupInfo defines a directory group in the databroker
type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{1}
}

func (x *GroupInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// UserInfo defines the metadata for a directory user in the databroker
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email          string            `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Groups         []string          `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	NamespaceRoles map[string]string `protobuf:"bytes,5,rep,name=namespace_roles,json=namespaceRoles,proto3" json:"namespace_roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PictureUrl     string            `protobuf:"bytes,6,opt,name=picture_url,json=pictureUrl,proto3" json:"picture_url,omitempty"`
	IsImpersonated bool              `protobuf:"varint,7,opt,name=is_impersonated,json=isImpersonated,proto3" json:"is_impersonated,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{2}
}

func (x *UserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *UserInfo) GetNamespaceRoles() map[string]string {
	if x != nil {
		return x.NamespaceRoles
	}
	return nil
}

func (x *UserInfo) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

func (x *UserInfo) GetIsImpersonated() bool {
	if x != nil {
		return x.IsImpersonated
	}
	return false
}

type GetUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserInfoRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *GetUserInfoResponse) Reset() {
	*x = GetUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResponse) ProtoMessage() {}

func (x *GetUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserInfoResponse) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// QueryGroupsRequest defines the groups to retrieve
type QueryGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *QueryGroupsRequest) Reset() {
	*x = QueryGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGroupsRequest) ProtoMessage() {}

func (x *QueryGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGroupsRequest.ProtoReflect.Descriptor instead.
func (*QueryGroupsRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{5}
}

func (x *QueryGroupsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryGroupsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *QueryGroupsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// QueryGroupsResponse is the list of groups retrieved from a QueryGroupsRequest
type QueryGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups     []*GroupInfo `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	TotalCount int64        `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *QueryGroupsResponse) Reset() {
	*x = QueryGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGroupsResponse) ProtoMessage() {}

func (x *QueryGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGroupsResponse.ProtoReflect.Descriptor instead.
func (*QueryGroupsResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{6}
}

func (x *QueryGroupsResponse) GetGroups() []*GroupInfo {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *QueryGroupsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// QueryUsersRequest defines the users to retrieve
type QueryUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list Users with any fields that match the query
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// list Users starting from an offset in the total list
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// limit the number of User entries returned
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *QueryUsersRequest) Reset() {
	*x = QueryUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUsersRequest) ProtoMessage() {}

func (x *QueryUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUsersRequest.ProtoReflect.Descriptor instead.
func (*QueryUsersRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{7}
}

func (x *QueryUsersRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryUsersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *QueryUsersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// QueryUsersResponse is the list of users retrieved from a QueryUsersRequest
type QueryUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users      []*UserInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	TotalCount int64       `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *QueryUsersResponse) Reset() {
	*x = QueryUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUsersResponse) ProtoMessage() {}

func (x *QueryUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUsersResponse.ProtoReflect.Descriptor instead.
func (*QueryUsersResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{8}
}

func (x *QueryUsersResponse) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *QueryUsersResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// PomeriumServiceAccount defines the identity properties of a service account
type PomeriumServiceAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceId *string                `protobuf:"bytes,8,opt,name=namespace_id,json=namespaceId,proto3,oneof" json:"namespace_id,omitempty"`
	Description *string                `protobuf:"bytes,9,opt,name=description,proto3,oneof" json:"description,omitempty"`
	UserId      string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ExpiresAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	IssuedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
}

func (x *PomeriumServiceAccount) Reset() {
	*x = PomeriumServiceAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PomeriumServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PomeriumServiceAccount) ProtoMessage() {}

func (x *PomeriumServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PomeriumServiceAccount.ProtoReflect.Descriptor instead.
func (*PomeriumServiceAccount) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{9}
}

func (x *PomeriumServiceAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PomeriumServiceAccount) GetNamespaceId() string {
	if x != nil && x.NamespaceId != nil {
		return *x.NamespaceId
	}
	return ""
}

func (x *PomeriumServiceAccount) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PomeriumServiceAccount) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PomeriumServiceAccount) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *PomeriumServiceAccount) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

type AddPomeriumServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccount *PomeriumServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *AddPomeriumServiceAccountRequest) Reset() {
	*x = AddPomeriumServiceAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPomeriumServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPomeriumServiceAccountRequest) ProtoMessage() {}

func (x *AddPomeriumServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPomeriumServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*AddPomeriumServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{10}
}

func (x *AddPomeriumServiceAccountRequest) GetServiceAccount() *PomeriumServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type AddPomeriumServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccount *PomeriumServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	JWT            string                  `protobuf:"bytes,2,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *AddPomeriumServiceAccountResponse) Reset() {
	*x = AddPomeriumServiceAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPomeriumServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPomeriumServiceAccountResponse) ProtoMessage() {}

func (x *AddPomeriumServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPomeriumServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*AddPomeriumServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{11}
}

func (x *AddPomeriumServiceAccountResponse) GetServiceAccount() *PomeriumServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

func (x *AddPomeriumServiceAccountResponse) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

type DeletePomeriumServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePomeriumServiceAccountRequest) Reset() {
	*x = DeletePomeriumServiceAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePomeriumServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePomeriumServiceAccountRequest) ProtoMessage() {}

func (x *DeletePomeriumServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePomeriumServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*DeletePomeriumServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{12}
}

func (x *DeletePomeriumServiceAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePomeriumServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePomeriumServiceAccountResponse) Reset() {
	*x = DeletePomeriumServiceAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePomeriumServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePomeriumServiceAccountResponse) ProtoMessage() {}

func (x *DeletePomeriumServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePomeriumServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*DeletePomeriumServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{13}
}

type GetPomeriumServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPomeriumServiceAccountRequest) Reset() {
	*x = GetPomeriumServiceAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPomeriumServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPomeriumServiceAccountRequest) ProtoMessage() {}

func (x *GetPomeriumServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPomeriumServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*GetPomeriumServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{14}
}

func (x *GetPomeriumServiceAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPomeriumServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccount *PomeriumServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *GetPomeriumServiceAccountResponse) Reset() {
	*x = GetPomeriumServiceAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPomeriumServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPomeriumServiceAccountResponse) ProtoMessage() {}

func (x *GetPomeriumServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPomeriumServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*GetPomeriumServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{15}
}

func (x *GetPomeriumServiceAccountResponse) GetServiceAccount() *PomeriumServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

// ListPomeriumServiceAccountsRequest specifies the service accounts to list
type ListPomeriumServiceAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListPomeriumServiceAccountsRequest) Reset() {
	*x = ListPomeriumServiceAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPomeriumServiceAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPomeriumServiceAccountsRequest) ProtoMessage() {}

func (x *ListPomeriumServiceAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPomeriumServiceAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListPomeriumServiceAccountsRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{16}
}

func (x *ListPomeriumServiceAccountsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// ListPomeriumServiceAccountsResponse is the list of service accounts found for
// a ListPomeriumServiceAccountsRequest
type ListPomeriumServiceAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccounts []*PomeriumServiceAccount `protobuf:"bytes,1,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
}

func (x *ListPomeriumServiceAccountsResponse) Reset() {
	*x = ListPomeriumServiceAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPomeriumServiceAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPomeriumServiceAccountsResponse) ProtoMessage() {}

func (x *ListPomeriumServiceAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPomeriumServiceAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListPomeriumServiceAccountsResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{17}
}

func (x *ListPomeriumServiceAccountsResponse) GetServiceAccounts() []*PomeriumServiceAccount {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

// PomeriumSession defines a user session from the databroker
type PomeriumSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User      *PomeriumSession_User          `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Groups    []*PomeriumSession_Group       `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Issuer    string                         `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	IssuedAt  *timestamppb.Timestamp         `protobuf:"bytes,5,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	ExpiresAt *timestamppb.Timestamp         `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Audience  []string                       `protobuf:"bytes,7,rep,name=audience,proto3" json:"audience,omitempty"`
	Claims    map[string]*structpb.ListValue `protobuf:"bytes,8,rep,name=claims,proto3" json:"claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PomeriumSession) Reset() {
	*x = PomeriumSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PomeriumSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PomeriumSession) ProtoMessage() {}

func (x *PomeriumSession) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PomeriumSession.ProtoReflect.Descriptor instead.
func (*PomeriumSession) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{18}
}

func (x *PomeriumSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PomeriumSession) GetUser() *PomeriumSession_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PomeriumSession) GetGroups() []*PomeriumSession_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *PomeriumSession) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *PomeriumSession) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *PomeriumSession) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *PomeriumSession) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *PomeriumSession) GetClaims() map[string]*structpb.ListValue {
	if x != nil {
		return x.Claims
	}
	return nil
}

type DeletePomeriumSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePomeriumSessionRequest) Reset() {
	*x = DeletePomeriumSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePomeriumSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePomeriumSessionRequest) ProtoMessage() {}

func (x *DeletePomeriumSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePomeriumSessionRequest.ProtoReflect.Descriptor instead.
func (*DeletePomeriumSessionRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{19}
}

func (x *DeletePomeriumSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePomeriumSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePomeriumSessionResponse) Reset() {
	*x = DeletePomeriumSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePomeriumSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePomeriumSessionResponse) ProtoMessage() {}

func (x *DeletePomeriumSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePomeriumSessionResponse.ProtoReflect.Descriptor instead.
func (*DeletePomeriumSessionResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{20}
}

type GetPomeriumSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPomeriumSessionRequest) Reset() {
	*x = GetPomeriumSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPomeriumSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPomeriumSessionRequest) ProtoMessage() {}

func (x *GetPomeriumSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPomeriumSessionRequest.ProtoReflect.Descriptor instead.
func (*GetPomeriumSessionRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{21}
}

func (x *GetPomeriumSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPomeriumSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session            *PomeriumSession   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	AssociatedSessions []*PomeriumSession `protobuf:"bytes,2,rep,name=associated_sessions,json=associatedSessions,proto3" json:"associated_sessions,omitempty"`
}

func (x *GetPomeriumSessionResponse) Reset() {
	*x = GetPomeriumSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPomeriumSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPomeriumSessionResponse) ProtoMessage() {}

func (x *GetPomeriumSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPomeriumSessionResponse.ProtoReflect.Descriptor instead.
func (*GetPomeriumSessionResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{22}
}

func (x *GetPomeriumSessionResponse) GetSession() *PomeriumSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetPomeriumSessionResponse) GetAssociatedSessions() []*PomeriumSession {
	if x != nil {
		return x.AssociatedSessions
	}
	return nil
}

// ListPomeriumSessionsRequest specifies the sessions to list
type ListPomeriumSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list Sessions with any fields that contain the query string
	Query *string `protobuf:"bytes,1,opt,name=query,proto3,oneof" json:"query,omitempty"`
	// list Sessions starting from an offset in the total list
	Offset *int64 `protobuf:"varint,2,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	// limit the number of Session entries returned
	Limit *int64 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	// sort the Sessions by newest, oldest or name
	OrderBy *string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	UserId  *string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
}

func (x *ListPomeriumSessionsRequest) Reset() {
	*x = ListPomeriumSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPomeriumSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPomeriumSessionsRequest) ProtoMessage() {}

func (x *ListPomeriumSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPomeriumSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListPomeriumSessionsRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{23}
}

func (x *ListPomeriumSessionsRequest) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *ListPomeriumSessionsRequest) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListPomeriumSessionsRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListPomeriumSessionsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListPomeriumSessionsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

// ListPomeriumSessionsResponse is the sessions found for a
// ListPomeriumSessionsRequest
type ListPomeriumSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions   []*PomeriumSession `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	TotalCount int64              `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListPomeriumSessionsResponse) Reset() {
	*x = ListPomeriumSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPomeriumSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPomeriumSessionsResponse) ProtoMessage() {}

func (x *ListPomeriumSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPomeriumSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListPomeriumSessionsResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{24}
}

func (x *ListPomeriumSessionsResponse) GetSessions() []*PomeriumSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListPomeriumSessionsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ImpersonateRequest defines the identity information to impersonate
type ImpersonateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ImpersonateRequest) Reset() {
	*x = ImpersonateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpersonateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpersonateRequest) ProtoMessage() {}

func (x *ImpersonateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpersonateRequest.ProtoReflect.Descriptor instead.
func (*ImpersonateRequest) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{25}
}

func (x *ImpersonateRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ImpersonateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImpersonateResponse) Reset() {
	*x = ImpersonateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpersonateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpersonateResponse) ProtoMessage() {}

func (x *ImpersonateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpersonateResponse.ProtoReflect.Descriptor instead.
func (*ImpersonateResponse) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{26}
}

type PomeriumSession_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *PomeriumSession_Group) Reset() {
	*x = PomeriumSession_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PomeriumSession_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PomeriumSession_Group) ProtoMessage() {}

func (x *PomeriumSession_Group) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PomeriumSession_Group.ProtoReflect.Descriptor instead.
func (*PomeriumSession_Group) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{18, 0}
}

func (x *PomeriumSession_Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PomeriumSession_Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PomeriumSession_Group) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type PomeriumSession_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *PomeriumSession_User) Reset() {
	*x = PomeriumSession_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PomeriumSession_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PomeriumSession_User) ProtoMessage() {}

func (x *PomeriumSession_User) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PomeriumSession_User.ProtoReflect.Descriptor instead.
func (*PomeriumSession_User) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{18, 1}
}

func (x *PomeriumSession_User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PomeriumSession_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PomeriumSession_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_users_proto protoreflect.FileDescriptor

var file_users_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x70,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8f, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x22, 0x2f, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x27,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x69, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x49, 0x6d, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x41, 0x0a, 0x13, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x12,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6d, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x69,
	0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x16, 0x50, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x77, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x21, 0x41,
	0x64, 0x64, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4a, 0x57, 0x54, 0x22, 0x35, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26,
	0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x7c, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xef, 0x04, 0x0a, 0x0f, 0x50, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x1a, 0x41, 0x0a, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a,
	0x40, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x1a, 0x55, 0x0a, 0x0b, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x13, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x1b, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x12, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x49,
	0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xaa, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x26, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x26, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x25, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69,
	0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xda, 0x04, 0x0a, 0x1d, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x88, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x34, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a,
	0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x2e,
	0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x88, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34,
	0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x2e, 0x70, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe6, 0x03, 0x0a,
	0x16, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x70, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x49, 0x6d,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x49,
	0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2f, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_users_proto_rawDescOnce sync.Once
	file_users_proto_rawDescData = file_users_proto_rawDesc
)

func file_users_proto_rawDescGZIP() []byte {
	file_users_proto_rawDescOnce.Do(func() {
		file_users_proto_rawDescData = protoimpl.X.CompressGZIP(file_users_proto_rawDescData)
	})
	return file_users_proto_rawDescData
}

var file_users_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_users_proto_goTypes = []interface{}{
	(*RecoveryToken)(nil),                        // 0: pomerium.dashboard.RecoveryToken
	(*GroupInfo)(nil),                            // 1: pomerium.dashboard.GroupInfo
	(*UserInfo)(nil),                             // 2: pomerium.dashboard.UserInfo
	(*GetUserInfoRequest)(nil),                   // 3: pomerium.dashboard.GetUserInfoRequest
	(*GetUserInfoResponse)(nil),                  // 4: pomerium.dashboard.GetUserInfoResponse
	(*QueryGroupsRequest)(nil),                   // 5: pomerium.dashboard.QueryGroupsRequest
	(*QueryGroupsResponse)(nil),                  // 6: pomerium.dashboard.QueryGroupsResponse
	(*QueryUsersRequest)(nil),                    // 7: pomerium.dashboard.QueryUsersRequest
	(*QueryUsersResponse)(nil),                   // 8: pomerium.dashboard.QueryUsersResponse
	(*PomeriumServiceAccount)(nil),               // 9: pomerium.dashboard.PomeriumServiceAccount
	(*AddPomeriumServiceAccountRequest)(nil),     // 10: pomerium.dashboard.AddPomeriumServiceAccountRequest
	(*AddPomeriumServiceAccountResponse)(nil),    // 11: pomerium.dashboard.AddPomeriumServiceAccountResponse
	(*DeletePomeriumServiceAccountRequest)(nil),  // 12: pomerium.dashboard.DeletePomeriumServiceAccountRequest
	(*DeletePomeriumServiceAccountResponse)(nil), // 13: pomerium.dashboard.DeletePomeriumServiceAccountResponse
	(*GetPomeriumServiceAccountRequest)(nil),     // 14: pomerium.dashboard.GetPomeriumServiceAccountRequest
	(*GetPomeriumServiceAccountResponse)(nil),    // 15: pomerium.dashboard.GetPomeriumServiceAccountResponse
	(*ListPomeriumServiceAccountsRequest)(nil),   // 16: pomerium.dashboard.ListPomeriumServiceAccountsRequest
	(*ListPomeriumServiceAccountsResponse)(nil),  // 17: pomerium.dashboard.ListPomeriumServiceAccountsResponse
	(*PomeriumSession)(nil),                      // 18: pomerium.dashboard.PomeriumSession
	(*DeletePomeriumSessionRequest)(nil),         // 19: pomerium.dashboard.DeletePomeriumSessionRequest
	(*DeletePomeriumSessionResponse)(nil),        // 20: pomerium.dashboard.DeletePomeriumSessionResponse
	(*GetPomeriumSessionRequest)(nil),            // 21: pomerium.dashboard.GetPomeriumSessionRequest
	(*GetPomeriumSessionResponse)(nil),           // 22: pomerium.dashboard.GetPomeriumSessionResponse
	(*ListPomeriumSessionsRequest)(nil),          // 23: pomerium.dashboard.ListPomeriumSessionsRequest
	(*ListPomeriumSessionsResponse)(nil),         // 24: pomerium.dashboard.ListPomeriumSessionsResponse
	(*ImpersonateRequest)(nil),                   // 25: pomerium.dashboard.ImpersonateRequest
	(*ImpersonateResponse)(nil),                  // 26: pomerium.dashboard.ImpersonateResponse
	nil,                                          // 27: pomerium.dashboard.UserInfo.NamespaceRolesEntry
	(*PomeriumSession_Group)(nil),                // 28: pomerium.dashboard.PomeriumSession.Group
	(*PomeriumSession_User)(nil),                 // 29: pomerium.dashboard.PomeriumSession.User
	nil,                                          // 30: pomerium.dashboard.PomeriumSession.ClaimsEntry
	(*timestamppb.Timestamp)(nil),                // 31: google.protobuf.Timestamp
	(*structpb.ListValue)(nil),                   // 32: google.protobuf.ListValue
}
var file_users_proto_depIdxs = []int32{
	31, // 0: pomerium.dashboard.RecoveryToken.created_at:type_name -> google.protobuf.Timestamp
	31, // 1: pomerium.dashboard.RecoveryToken.modified_at:type_name -> google.protobuf.Timestamp
	31, // 2: pomerium.dashboard.RecoveryToken.expires_at:type_name -> google.protobuf.Timestamp
	27, // 3: pomerium.dashboard.UserInfo.namespace_roles:type_name -> pomerium.dashboard.UserInfo.NamespaceRolesEntry
	2,  // 4: pomerium.dashboard.GetUserInfoResponse.user_info:type_name -> pomerium.dashboard.UserInfo
	1,  // 5: pomerium.dashboard.QueryGroupsResponse.groups:type_name -> pomerium.dashboard.GroupInfo
	2,  // 6: pomerium.dashboard.QueryUsersResponse.users:type_name -> pomerium.dashboard.UserInfo
	31, // 7: pomerium.dashboard.PomeriumServiceAccount.expires_at:type_name -> google.protobuf.Timestamp
	31, // 8: pomerium.dashboard.PomeriumServiceAccount.issued_at:type_name -> google.protobuf.Timestamp
	9,  // 9: pomerium.dashboard.AddPomeriumServiceAccountRequest.service_account:type_name -> pomerium.dashboard.PomeriumServiceAccount
	9,  // 10: pomerium.dashboard.AddPomeriumServiceAccountResponse.service_account:type_name -> pomerium.dashboard.PomeriumServiceAccount
	9,  // 11: pomerium.dashboard.GetPomeriumServiceAccountResponse.service_account:type_name -> pomerium.dashboard.PomeriumServiceAccount
	9,  // 12: pomerium.dashboard.ListPomeriumServiceAccountsResponse.service_accounts:type_name -> pomerium.dashboard.PomeriumServiceAccount
	29, // 13: pomerium.dashboard.PomeriumSession.user:type_name -> pomerium.dashboard.PomeriumSession.User
	28, // 14: pomerium.dashboard.PomeriumSession.groups:type_name -> pomerium.dashboard.PomeriumSession.Group
	31, // 15: pomerium.dashboard.PomeriumSession.issued_at:type_name -> google.protobuf.Timestamp
	31, // 16: pomerium.dashboard.PomeriumSession.expires_at:type_name -> google.protobuf.Timestamp
	30, // 17: pomerium.dashboard.PomeriumSession.claims:type_name -> pomerium.dashboard.PomeriumSession.ClaimsEntry
	18, // 18: pomerium.dashboard.GetPomeriumSessionResponse.session:type_name -> pomerium.dashboard.PomeriumSession
	18, // 19: pomerium.dashboard.GetPomeriumSessionResponse.associated_sessions:type_name -> pomerium.dashboard.PomeriumSession
	18, // 20: pomerium.dashboard.ListPomeriumSessionsResponse.sessions:type_name -> pomerium.dashboard.PomeriumSession
	32, // 21: pomerium.dashboard.PomeriumSession.ClaimsEntry.value:type_name -> google.protobuf.ListValue
	3,  // 22: pomerium.dashboard.UserService.GetUserInfo:input_type -> pomerium.dashboard.GetUserInfoRequest
	5,  // 23: pomerium.dashboard.UserService.QueryGroups:input_type -> pomerium.dashboard.QueryGroupsRequest
	7,  // 24: pomerium.dashboard.UserService.QueryUsers:input_type -> pomerium.dashboard.QueryUsersRequest
	10, // 25: pomerium.dashboard.PomeriumServiceAccountService.AddPomeriumServiceAccount:input_type -> pomerium.dashboard.AddPomeriumServiceAccountRequest
	12, // 26: pomerium.dashboard.PomeriumServiceAccountService.DeletePomeriumServiceAccount:input_type -> pomerium.dashboard.DeletePomeriumServiceAccountRequest
	14, // 27: pomerium.dashboard.PomeriumServiceAccountService.GetPomeriumServiceAccount:input_type -> pomerium.dashboard.GetPomeriumServiceAccountRequest
	16, // 28: pomerium.dashboard.PomeriumServiceAccountService.ListPomeriumServiceAccounts:input_type -> pomerium.dashboard.ListPomeriumServiceAccountsRequest
	19, // 29: pomerium.dashboard.PomeriumSessionService.DeletePomeriumSession:input_type -> pomerium.dashboard.DeletePomeriumSessionRequest
	21, // 30: pomerium.dashboard.PomeriumSessionService.GetPomeriumSession:input_type -> pomerium.dashboard.GetPomeriumSessionRequest
	25, // 31: pomerium.dashboard.PomeriumSessionService.Impersonate:input_type -> pomerium.dashboard.ImpersonateRequest
	23, // 32: pomerium.dashboard.PomeriumSessionService.ListPomeriumSessions:input_type -> pomerium.dashboard.ListPomeriumSessionsRequest
	4,  // 33: pomerium.dashboard.UserService.GetUserInfo:output_type -> pomerium.dashboard.GetUserInfoResponse
	6,  // 34: pomerium.dashboard.UserService.QueryGroups:output_type -> pomerium.dashboard.QueryGroupsResponse
	8,  // 35: pomerium.dashboard.UserService.QueryUsers:output_type -> pomerium.dashboard.QueryUsersResponse
	11, // 36: pomerium.dashboard.PomeriumServiceAccountService.AddPomeriumServiceAccount:output_type -> pomerium.dashboard.AddPomeriumServiceAccountResponse
	13, // 37: pomerium.dashboard.PomeriumServiceAccountService.DeletePomeriumServiceAccount:output_type -> pomerium.dashboard.DeletePomeriumServiceAccountResponse
	15, // 38: pomerium.dashboard.PomeriumServiceAccountService.GetPomeriumServiceAccount:output_type -> pomerium.dashboard.GetPomeriumServiceAccountResponse
	17, // 39: pomerium.dashboard.PomeriumServiceAccountService.ListPomeriumServiceAccounts:output_type -> pomerium.dashboard.ListPomeriumServiceAccountsResponse
	20, // 40: pomerium.dashboard.PomeriumSessionService.DeletePomeriumSession:output_type -> pomerium.dashboard.DeletePomeriumSessionResponse
	22, // 41: pomerium.dashboard.PomeriumSessionService.GetPomeriumSession:output_type -> pomerium.dashboard.GetPomeriumSessionResponse
	26, // 42: pomerium.dashboard.PomeriumSessionService.Impersonate:output_type -> pomerium.dashboard.ImpersonateResponse
	24, // 43: pomerium.dashboard.PomeriumSessionService.ListPomeriumSessions:output_type -> pomerium.dashboard.ListPomeriumSessionsResponse
	33, // [33:44] is the sub-list for method output_type
	22, // [22:33] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_users_proto_init() }
func file_users_proto_init() {
	if File_users_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_users_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoveryToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PomeriumServiceAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPomeriumServiceAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPomeriumServiceAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePomeriumServiceAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePomeriumServiceAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPomeriumServiceAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPomeriumServiceAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPomeriumServiceAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPomeriumServiceAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PomeriumSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePomeriumSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePomeriumSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPomeriumSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPomeriumSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPomeriumSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPomeriumSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpersonateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpersonateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PomeriumSession_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PomeriumSession_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_users_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_users_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_users_proto_msgTypes[23].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_users_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_users_proto_goTypes,
		DependencyIndexes: file_users_proto_depIdxs,
		MessageInfos:      file_users_proto_msgTypes,
	}.Build()
	File_users_proto = out.File
	file_users_proto_rawDesc = nil
	file_users_proto_goTypes = nil
	file_users_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// GetUserInfo retrieves identity information and permission mappings for a
	// user
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	// QueryGroups retrieves groups from the databroker based on
	// QueryGroupsRequest parameters
	QueryGroups(ctx context.Context, in *QueryGroupsRequest, opts ...grpc.CallOption) (*QueryGroupsResponse, error)
	// QueryUsers retrieves users from the databroker based on QueryUsersRequest
	// parameters
	QueryUsers(ctx context.Context, in *QueryUsersRequest, opts ...grpc.CallOption) (*QueryUsersResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	out := new(GetUserInfoResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.UserService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryGroups(ctx context.Context, in *QueryGroupsRequest, opts ...grpc.CallOption) (*QueryGroupsResponse, error) {
	out := new(QueryGroupsResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.UserService/QueryGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) QueryUsers(ctx context.Context, in *QueryUsersRequest, opts ...grpc.CallOption) (*QueryUsersResponse, error) {
	out := new(QueryUsersResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.UserService/QueryUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// GetUserInfo retrieves identity information and permission mappings for a
	// user
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error)
	// QueryGroups retrieves groups from the databroker based on
	// QueryGroupsRequest parameters
	QueryGroups(context.Context, *QueryGroupsRequest) (*QueryGroupsResponse, error)
	// QueryUsers retrieves users from the databroker based on QueryUsersRequest
	// parameters
	QueryUsers(context.Context, *QueryUsersRequest) (*QueryUsersResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedUserServiceServer) QueryGroups(context.Context, *QueryGroupsRequest) (*QueryGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryGroups not implemented")
}
func (*UnimplementedUserServiceServer) QueryUsers(context.Context, *QueryUsersRequest) (*QueryUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryUsers not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.UserService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.UserService/QueryGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryGroups(ctx, req.(*QueryGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_QueryUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).QueryUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.UserService/QueryUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).QueryUsers(ctx, req.(*QueryUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pomerium.dashboard.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _UserService_GetUserInfo_Handler,
		},
		{
			MethodName: "QueryGroups",
			Handler:    _UserService_QueryGroups_Handler,
		},
		{
			MethodName: "QueryUsers",
			Handler:    _UserService_QueryUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}

// PomeriumServiceAccountServiceClient is the client API for PomeriumServiceAccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PomeriumServiceAccountServiceClient interface {
	// AddPomeriumServiceAccount creates a new service account
	AddPomeriumServiceAccount(ctx context.Context, in *AddPomeriumServiceAccountRequest, opts ...grpc.CallOption) (*AddPomeriumServiceAccountResponse, error)
	// DeletePomeriumServiceAccount removes an existing service account
	DeletePomeriumServiceAccount(ctx context.Context, in *DeletePomeriumServiceAccountRequest, opts ...grpc.CallOption) (*DeletePomeriumServiceAccountResponse, error)
	// GetPomeriumServiceAccount retrieves an existing service account
	GetPomeriumServiceAccount(ctx context.Context, in *GetPomeriumServiceAccountRequest, opts ...grpc.CallOption) (*GetPomeriumServiceAccountResponse, error)
	// ListPomeriumServiceAccounts lists service accounts based on the parameters
	// in ListPomeriumServiceAccountsRequest
	ListPomeriumServiceAccounts(ctx context.Context, in *ListPomeriumServiceAccountsRequest, opts ...grpc.CallOption) (*ListPomeriumServiceAccountsResponse, error)
}

type pomeriumServiceAccountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPomeriumServiceAccountServiceClient(cc grpc.ClientConnInterface) PomeriumServiceAccountServiceClient {
	return &pomeriumServiceAccountServiceClient{cc}
}

func (c *pomeriumServiceAccountServiceClient) AddPomeriumServiceAccount(ctx context.Context, in *AddPomeriumServiceAccountRequest, opts ...grpc.CallOption) (*AddPomeriumServiceAccountResponse, error) {
	out := new(AddPomeriumServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumServiceAccountService/AddPomeriumServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pomeriumServiceAccountServiceClient) DeletePomeriumServiceAccount(ctx context.Context, in *DeletePomeriumServiceAccountRequest, opts ...grpc.CallOption) (*DeletePomeriumServiceAccountResponse, error) {
	out := new(DeletePomeriumServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumServiceAccountService/DeletePomeriumServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pomeriumServiceAccountServiceClient) GetPomeriumServiceAccount(ctx context.Context, in *GetPomeriumServiceAccountRequest, opts ...grpc.CallOption) (*GetPomeriumServiceAccountResponse, error) {
	out := new(GetPomeriumServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumServiceAccountService/GetPomeriumServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pomeriumServiceAccountServiceClient) ListPomeriumServiceAccounts(ctx context.Context, in *ListPomeriumServiceAccountsRequest, opts ...grpc.CallOption) (*ListPomeriumServiceAccountsResponse, error) {
	out := new(ListPomeriumServiceAccountsResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumServiceAccountService/ListPomeriumServiceAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PomeriumServiceAccountServiceServer is the server API for PomeriumServiceAccountService service.
type PomeriumServiceAccountServiceServer interface {
	// AddPomeriumServiceAccount creates a new service account
	AddPomeriumServiceAccount(context.Context, *AddPomeriumServiceAccountRequest) (*AddPomeriumServiceAccountResponse, error)
	// DeletePomeriumServiceAccount removes an existing service account
	DeletePomeriumServiceAccount(context.Context, *DeletePomeriumServiceAccountRequest) (*DeletePomeriumServiceAccountResponse, error)
	// GetPomeriumServiceAccount retrieves an existing service account
	GetPomeriumServiceAccount(context.Context, *GetPomeriumServiceAccountRequest) (*GetPomeriumServiceAccountResponse, error)
	// ListPomeriumServiceAccounts lists service accounts based on the parameters
	// in ListPomeriumServiceAccountsRequest
	ListPomeriumServiceAccounts(context.Context, *ListPomeriumServiceAccountsRequest) (*ListPomeriumServiceAccountsResponse, error)
}

// UnimplementedPomeriumServiceAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPomeriumServiceAccountServiceServer struct {
}

func (*UnimplementedPomeriumServiceAccountServiceServer) AddPomeriumServiceAccount(context.Context, *AddPomeriumServiceAccountRequest) (*AddPomeriumServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPomeriumServiceAccount not implemented")
}
func (*UnimplementedPomeriumServiceAccountServiceServer) DeletePomeriumServiceAccount(context.Context, *DeletePomeriumServiceAccountRequest) (*DeletePomeriumServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePomeriumServiceAccount not implemented")
}
func (*UnimplementedPomeriumServiceAccountServiceServer) GetPomeriumServiceAccount(context.Context, *GetPomeriumServiceAccountRequest) (*GetPomeriumServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPomeriumServiceAccount not implemented")
}
func (*UnimplementedPomeriumServiceAccountServiceServer) ListPomeriumServiceAccounts(context.Context, *ListPomeriumServiceAccountsRequest) (*ListPomeriumServiceAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPomeriumServiceAccounts not implemented")
}

func RegisterPomeriumServiceAccountServiceServer(s *grpc.Server, srv PomeriumServiceAccountServiceServer) {
	s.RegisterService(&_PomeriumServiceAccountService_serviceDesc, srv)
}

func _PomeriumServiceAccountService_AddPomeriumServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPomeriumServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumServiceAccountServiceServer).AddPomeriumServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumServiceAccountService/AddPomeriumServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumServiceAccountServiceServer).AddPomeriumServiceAccount(ctx, req.(*AddPomeriumServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PomeriumServiceAccountService_DeletePomeriumServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePomeriumServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumServiceAccountServiceServer).DeletePomeriumServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumServiceAccountService/DeletePomeriumServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumServiceAccountServiceServer).DeletePomeriumServiceAccount(ctx, req.(*DeletePomeriumServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PomeriumServiceAccountService_GetPomeriumServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPomeriumServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumServiceAccountServiceServer).GetPomeriumServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumServiceAccountService/GetPomeriumServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumServiceAccountServiceServer).GetPomeriumServiceAccount(ctx, req.(*GetPomeriumServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PomeriumServiceAccountService_ListPomeriumServiceAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPomeriumServiceAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumServiceAccountServiceServer).ListPomeriumServiceAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumServiceAccountService/ListPomeriumServiceAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumServiceAccountServiceServer).ListPomeriumServiceAccounts(ctx, req.(*ListPomeriumServiceAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PomeriumServiceAccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pomerium.dashboard.PomeriumServiceAccountService",
	HandlerType: (*PomeriumServiceAccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPomeriumServiceAccount",
			Handler:    _PomeriumServiceAccountService_AddPomeriumServiceAccount_Handler,
		},
		{
			MethodName: "DeletePomeriumServiceAccount",
			Handler:    _PomeriumServiceAccountService_DeletePomeriumServiceAccount_Handler,
		},
		{
			MethodName: "GetPomeriumServiceAccount",
			Handler:    _PomeriumServiceAccountService_GetPomeriumServiceAccount_Handler,
		},
		{
			MethodName: "ListPomeriumServiceAccounts",
			Handler:    _PomeriumServiceAccountService_ListPomeriumServiceAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}

// PomeriumSessionServiceClient is the client API for PomeriumSessionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PomeriumSessionServiceClient interface {
	// DeletePomeriumSession clears an existing user session
	DeletePomeriumSession(ctx context.Context, in *DeletePomeriumSessionRequest, opts ...grpc.CallOption) (*DeletePomeriumSessionResponse, error)
	// GetPomeriumSession retrieves information about an existing user session
	GetPomeriumSession(ctx context.Context, in *GetPomeriumSessionRequest, opts ...grpc.CallOption) (*GetPomeriumSessionResponse, error)
	// Impersonate updates an existing session to impersonate another identity
	Impersonate(ctx context.Context, in *ImpersonateRequest, opts ...grpc.CallOption) (*ImpersonateResponse, error)
	// ListPomeriumSessions lists existing sessions based on the parameters of
	// ListPomeriumSessionsRequest
	ListPomeriumSessions(ctx context.Context, in *ListPomeriumSessionsRequest, opts ...grpc.CallOption) (*ListPomeriumSessionsResponse, error)
}

type pomeriumSessionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPomeriumSessionServiceClient(cc grpc.ClientConnInterface) PomeriumSessionServiceClient {
	return &pomeriumSessionServiceClient{cc}
}

func (c *pomeriumSessionServiceClient) DeletePomeriumSession(ctx context.Context, in *DeletePomeriumSessionRequest, opts ...grpc.CallOption) (*DeletePomeriumSessionResponse, error) {
	out := new(DeletePomeriumSessionResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumSessionService/DeletePomeriumSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pomeriumSessionServiceClient) GetPomeriumSession(ctx context.Context, in *GetPomeriumSessionRequest, opts ...grpc.CallOption) (*GetPomeriumSessionResponse, error) {
	out := new(GetPomeriumSessionResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumSessionService/GetPomeriumSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pomeriumSessionServiceClient) Impersonate(ctx context.Context, in *ImpersonateRequest, opts ...grpc.CallOption) (*ImpersonateResponse, error) {
	out := new(ImpersonateResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumSessionService/Impersonate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pomeriumSessionServiceClient) ListPomeriumSessions(ctx context.Context, in *ListPomeriumSessionsRequest, opts ...grpc.CallOption) (*ListPomeriumSessionsResponse, error) {
	out := new(ListPomeriumSessionsResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.PomeriumSessionService/ListPomeriumSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PomeriumSessionServiceServer is the server API for PomeriumSessionService service.
type PomeriumSessionServiceServer interface {
	// DeletePomeriumSession clears an existing user session
	DeletePomeriumSession(context.Context, *DeletePomeriumSessionRequest) (*DeletePomeriumSessionResponse, error)
	// GetPomeriumSession retrieves information about an existing user session
	GetPomeriumSession(context.Context, *GetPomeriumSessionRequest) (*GetPomeriumSessionResponse, error)
	// Impersonate updates an existing session to impersonate another identity
	Impersonate(context.Context, *ImpersonateRequest) (*ImpersonateResponse, error)
	// ListPomeriumSessions lists existing sessions based on the parameters of
	// ListPomeriumSessionsRequest
	ListPomeriumSessions(context.Context, *ListPomeriumSessionsRequest) (*ListPomeriumSessionsResponse, error)
}

// UnimplementedPomeriumSessionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPomeriumSessionServiceServer struct {
}

func (*UnimplementedPomeriumSessionServiceServer) DeletePomeriumSession(context.Context, *DeletePomeriumSessionRequest) (*DeletePomeriumSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePomeriumSession not implemented")
}
func (*UnimplementedPomeriumSessionServiceServer) GetPomeriumSession(context.Context, *GetPomeriumSessionRequest) (*GetPomeriumSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPomeriumSession not implemented")
}
func (*UnimplementedPomeriumSessionServiceServer) Impersonate(context.Context, *ImpersonateRequest) (*ImpersonateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Impersonate not implemented")
}
func (*UnimplementedPomeriumSessionServiceServer) ListPomeriumSessions(context.Context, *ListPomeriumSessionsRequest) (*ListPomeriumSessionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPomeriumSessions not implemented")
}

func RegisterPomeriumSessionServiceServer(s *grpc.Server, srv PomeriumSessionServiceServer) {
	s.RegisterService(&_PomeriumSessionService_serviceDesc, srv)
}

func _PomeriumSessionService_DeletePomeriumSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePomeriumSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumSessionServiceServer).DeletePomeriumSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumSessionService/DeletePomeriumSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumSessionServiceServer).DeletePomeriumSession(ctx, req.(*DeletePomeriumSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PomeriumSessionService_GetPomeriumSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPomeriumSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumSessionServiceServer).GetPomeriumSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumSessionService/GetPomeriumSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumSessionServiceServer).GetPomeriumSession(ctx, req.(*GetPomeriumSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PomeriumSessionService_Impersonate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImpersonateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumSessionServiceServer).Impersonate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumSessionService/Impersonate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumSessionServiceServer).Impersonate(ctx, req.(*ImpersonateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PomeriumSessionService_ListPomeriumSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPomeriumSessionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PomeriumSessionServiceServer).ListPomeriumSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.PomeriumSessionService/ListPomeriumSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PomeriumSessionServiceServer).ListPomeriumSessions(ctx, req.(*ListPomeriumSessionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PomeriumSessionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pomerium.dashboard.PomeriumSessionService",
	HandlerType: (*PomeriumSessionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeletePomeriumSession",
			Handler:    _PomeriumSessionService_DeletePomeriumSession_Handler,
		},
		{
			MethodName: "GetPomeriumSession",
			Handler:    _PomeriumSessionService_GetPomeriumSession_Handler,
		},
		{
			MethodName: "Impersonate",
			Handler:    _PomeriumSessionService_Impersonate_Handler,
		},
		{
			MethodName: "ListPomeriumSessions",
			Handler:    _PomeriumSessionService_ListPomeriumSessions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}
