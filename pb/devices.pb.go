// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: devices.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceKind int32

const (
	DeviceKind_UNKNOWN  DeviceKind = 0
	DeviceKind_FIDO_U2F DeviceKind = 1
	DeviceKind_ANDROID  DeviceKind = 2
	DeviceKind_APPLE    DeviceKind = 3
	DeviceKind_TPM      DeviceKind = 4
	DeviceKind_WINDOWS  DeviceKind = 5
)

// Enum value maps for DeviceKind.
var (
	DeviceKind_name = map[int32]string{
		0: "UNKNOWN",
		1: "FIDO_U2F",
		2: "ANDROID",
		3: "APPLE",
		4: "TPM",
		5: "WINDOWS",
	}
	DeviceKind_value = map[string]int32{
		"UNKNOWN":  0,
		"FIDO_U2F": 1,
		"ANDROID":  2,
		"APPLE":    3,
		"TPM":      4,
		"WINDOWS":  5,
	}
)

func (x DeviceKind) Enum() *DeviceKind {
	p := new(DeviceKind)
	*p = x
	return p
}

func (x DeviceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_devices_proto_enumTypes[0].Descriptor()
}

func (DeviceKind) Type() protoreflect.EnumType {
	return &file_devices_proto_enumTypes[0]
}

func (x DeviceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceKind.Descriptor instead.
func (DeviceKind) EnumDescriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0}
}

type WebAuthnOptions_AttestationConveyancePreference int32

const (
	WebAuthnOptions_NONE       WebAuthnOptions_AttestationConveyancePreference = 0
	WebAuthnOptions_INDIRECT   WebAuthnOptions_AttestationConveyancePreference = 1
	WebAuthnOptions_DIRECT     WebAuthnOptions_AttestationConveyancePreference = 2
	WebAuthnOptions_ENTERPRISE WebAuthnOptions_AttestationConveyancePreference = 3
)

// Enum value maps for WebAuthnOptions_AttestationConveyancePreference.
var (
	WebAuthnOptions_AttestationConveyancePreference_name = map[int32]string{
		0: "NONE",
		1: "INDIRECT",
		2: "DIRECT",
		3: "ENTERPRISE",
	}
	WebAuthnOptions_AttestationConveyancePreference_value = map[string]int32{
		"NONE":       0,
		"INDIRECT":   1,
		"DIRECT":     2,
		"ENTERPRISE": 3,
	}
)

func (x WebAuthnOptions_AttestationConveyancePreference) Enum() *WebAuthnOptions_AttestationConveyancePreference {
	p := new(WebAuthnOptions_AttestationConveyancePreference)
	*p = x
	return p
}

func (x WebAuthnOptions_AttestationConveyancePreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_AttestationConveyancePreference) Descriptor() protoreflect.EnumDescriptor {
	return file_devices_proto_enumTypes[1].Descriptor()
}

func (WebAuthnOptions_AttestationConveyancePreference) Type() protoreflect.EnumType {
	return &file_devices_proto_enumTypes[1]
}

func (x WebAuthnOptions_AttestationConveyancePreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_AttestationConveyancePreference.Descriptor instead.
func (WebAuthnOptions_AttestationConveyancePreference) EnumDescriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0, 0}
}

type WebAuthnOptions_AuthenticatorAttachment int32

const (
	WebAuthnOptions_PLATFORM       WebAuthnOptions_AuthenticatorAttachment = 0
	WebAuthnOptions_CROSS_PLATFORM WebAuthnOptions_AuthenticatorAttachment = 2
)

// Enum value maps for WebAuthnOptions_AuthenticatorAttachment.
var (
	WebAuthnOptions_AuthenticatorAttachment_name = map[int32]string{
		0: "PLATFORM",
		2: "CROSS_PLATFORM",
	}
	WebAuthnOptions_AuthenticatorAttachment_value = map[string]int32{
		"PLATFORM":       0,
		"CROSS_PLATFORM": 2,
	}
)

func (x WebAuthnOptions_AuthenticatorAttachment) Enum() *WebAuthnOptions_AuthenticatorAttachment {
	p := new(WebAuthnOptions_AuthenticatorAttachment)
	*p = x
	return p
}

func (x WebAuthnOptions_AuthenticatorAttachment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_AuthenticatorAttachment) Descriptor() protoreflect.EnumDescriptor {
	return file_devices_proto_enumTypes[2].Descriptor()
}

func (WebAuthnOptions_AuthenticatorAttachment) Type() protoreflect.EnumType {
	return &file_devices_proto_enumTypes[2]
}

func (x WebAuthnOptions_AuthenticatorAttachment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_AuthenticatorAttachment.Descriptor instead.
func (WebAuthnOptions_AuthenticatorAttachment) EnumDescriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0, 1}
}

type WebAuthnOptions_PublicKeyCredentialType int32

const (
	WebAuthnOptions_PUBLIC_KEY WebAuthnOptions_PublicKeyCredentialType = 0
)

// Enum value maps for WebAuthnOptions_PublicKeyCredentialType.
var (
	WebAuthnOptions_PublicKeyCredentialType_name = map[int32]string{
		0: "PUBLIC_KEY",
	}
	WebAuthnOptions_PublicKeyCredentialType_value = map[string]int32{
		"PUBLIC_KEY": 0,
	}
)

func (x WebAuthnOptions_PublicKeyCredentialType) Enum() *WebAuthnOptions_PublicKeyCredentialType {
	p := new(WebAuthnOptions_PublicKeyCredentialType)
	*p = x
	return p
}

func (x WebAuthnOptions_PublicKeyCredentialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_PublicKeyCredentialType) Descriptor() protoreflect.EnumDescriptor {
	return file_devices_proto_enumTypes[3].Descriptor()
}

func (WebAuthnOptions_PublicKeyCredentialType) Type() protoreflect.EnumType {
	return &file_devices_proto_enumTypes[3]
}

func (x WebAuthnOptions_PublicKeyCredentialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_PublicKeyCredentialType.Descriptor instead.
func (WebAuthnOptions_PublicKeyCredentialType) EnumDescriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0, 2}
}

type WebAuthnOptions_ResidentKeyRequirement int32

const (
	WebAuthnOptions_RESIDENT_KEY_DISCOURAGED WebAuthnOptions_ResidentKeyRequirement = 0
	WebAuthnOptions_RESIDENT_KEY_PREFERRED   WebAuthnOptions_ResidentKeyRequirement = 1
	WebAuthnOptions_RESIDENT_KEY_REQUIRED    WebAuthnOptions_ResidentKeyRequirement = 2
)

// Enum value maps for WebAuthnOptions_ResidentKeyRequirement.
var (
	WebAuthnOptions_ResidentKeyRequirement_name = map[int32]string{
		0: "RESIDENT_KEY_DISCOURAGED",
		1: "RESIDENT_KEY_PREFERRED",
		2: "RESIDENT_KEY_REQUIRED",
	}
	WebAuthnOptions_ResidentKeyRequirement_value = map[string]int32{
		"RESIDENT_KEY_DISCOURAGED": 0,
		"RESIDENT_KEY_PREFERRED":   1,
		"RESIDENT_KEY_REQUIRED":    2,
	}
)

func (x WebAuthnOptions_ResidentKeyRequirement) Enum() *WebAuthnOptions_ResidentKeyRequirement {
	p := new(WebAuthnOptions_ResidentKeyRequirement)
	*p = x
	return p
}

func (x WebAuthnOptions_ResidentKeyRequirement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_ResidentKeyRequirement) Descriptor() protoreflect.EnumDescriptor {
	return file_devices_proto_enumTypes[4].Descriptor()
}

func (WebAuthnOptions_ResidentKeyRequirement) Type() protoreflect.EnumType {
	return &file_devices_proto_enumTypes[4]
}

func (x WebAuthnOptions_ResidentKeyRequirement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_ResidentKeyRequirement.Descriptor instead.
func (WebAuthnOptions_ResidentKeyRequirement) EnumDescriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0, 3}
}

type WebAuthnOptions_UserVerificationRequirement int32

const (
	WebAuthnOptions_USER_VERIFICATION_DISCOURAGED WebAuthnOptions_UserVerificationRequirement = 0
	WebAuthnOptions_USER_VERIFICATION_PREFERRED   WebAuthnOptions_UserVerificationRequirement = 1
	WebAuthnOptions_USER_VERIFICATION_REQUIRED    WebAuthnOptions_UserVerificationRequirement = 2
)

// Enum value maps for WebAuthnOptions_UserVerificationRequirement.
var (
	WebAuthnOptions_UserVerificationRequirement_name = map[int32]string{
		0: "USER_VERIFICATION_DISCOURAGED",
		1: "USER_VERIFICATION_PREFERRED",
		2: "USER_VERIFICATION_REQUIRED",
	}
	WebAuthnOptions_UserVerificationRequirement_value = map[string]int32{
		"USER_VERIFICATION_DISCOURAGED": 0,
		"USER_VERIFICATION_PREFERRED":   1,
		"USER_VERIFICATION_REQUIRED":    2,
	}
)

func (x WebAuthnOptions_UserVerificationRequirement) Enum() *WebAuthnOptions_UserVerificationRequirement {
	p := new(WebAuthnOptions_UserVerificationRequirement)
	*p = x
	return p
}

func (x WebAuthnOptions_UserVerificationRequirement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_UserVerificationRequirement) Descriptor() protoreflect.EnumDescriptor {
	return file_devices_proto_enumTypes[5].Descriptor()
}

func (WebAuthnOptions_UserVerificationRequirement) Type() protoreflect.EnumType {
	return &file_devices_proto_enumTypes[5]
}

func (x WebAuthnOptions_UserVerificationRequirement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_UserVerificationRequirement.Descriptor instead.
func (WebAuthnOptions_UserVerificationRequirement) EnumDescriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0, 4}
}

type WebAuthnOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attestation            *WebAuthnOptions_AttestationConveyancePreference `protobuf:"varint,1,opt,name=attestation,proto3,enum=pomerium.dashboard.WebAuthnOptions_AttestationConveyancePreference,oneof" json:"attestation,omitempty"`
	AuthenticatorSelection *WebAuthnOptions_AuthenticatorSelectionCriteria  `protobuf:"bytes,2,opt,name=authenticator_selection,json=authenticatorSelection,proto3,oneof" json:"authenticator_selection,omitempty"`
	PubKeyCredParams       []*WebAuthnOptions_PublicKeyCredentialParameters `protobuf:"bytes,3,rep,name=pub_key_cred_params,json=pubKeyCredParams,proto3" json:"pub_key_cred_params,omitempty"`
}

func (x *WebAuthnOptions) Reset() {
	*x = WebAuthnOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAuthnOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAuthnOptions) ProtoMessage() {}

func (x *WebAuthnOptions) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAuthnOptions.ProtoReflect.Descriptor instead.
func (*WebAuthnOptions) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0}
}

func (x *WebAuthnOptions) GetAttestation() WebAuthnOptions_AttestationConveyancePreference {
	if x != nil && x.Attestation != nil {
		return *x.Attestation
	}
	return WebAuthnOptions_NONE
}

func (x *WebAuthnOptions) GetAuthenticatorSelection() *WebAuthnOptions_AuthenticatorSelectionCriteria {
	if x != nil {
		return x.AuthenticatorSelection
	}
	return nil
}

func (x *WebAuthnOptions) GetPubKeyCredParams() []*WebAuthnOptions_PublicKeyCredentialParameters {
	if x != nil {
		return x.PubKeyCredParams
	}
	return nil
}

// A DeviceType constrains which kinds of devices are allowed to be registered.
type DeviceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Name       string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Specifier:
	//	*DeviceType_Webauthn
	Specifier isDeviceType_Specifier `protobuf_oneof:"specifier"`
}

func (x *DeviceType) Reset() {
	*x = DeviceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceType) ProtoMessage() {}

func (x *DeviceType) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceType.ProtoReflect.Descriptor instead.
func (*DeviceType) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeviceType) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *DeviceType) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DeviceType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *DeviceType) GetSpecifier() isDeviceType_Specifier {
	if m != nil {
		return m.Specifier
	}
	return nil
}

func (x *DeviceType) GetWebauthn() *DeviceType_WebAuthn {
	if x, ok := x.GetSpecifier().(*DeviceType_Webauthn); ok {
		return x.Webauthn
	}
	return nil
}

type isDeviceType_Specifier interface {
	isDeviceType_Specifier()
}

type DeviceType_Webauthn struct {
	Webauthn *DeviceType_WebAuthn `protobuf:"bytes,6,opt,name=webauthn,proto3,oneof"`
}

func (*DeviceType_Webauthn) isDeviceType_Specifier() {}

// A DeviceEnrollment is used to approve a user's device.
type DeviceEnrollment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	DeletedAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	DeviceTypeId       string                 `protobuf:"bytes,5,opt,name=device_type_id,json=deviceTypeId,proto3" json:"device_type_id,omitempty"`
	DeviceCredentialId string                 `protobuf:"bytes,6,opt,name=device_credential_id,json=deviceCredentialId,proto3" json:"device_credential_id,omitempty"`
	UserId             string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ApprovedAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=approved_at,json=approvedAt,proto3" json:"approved_at,omitempty"`
	ApprovedByUserId   string                 `protobuf:"bytes,9,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	EnrolledAt         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=enrolled_at,json=enrolledAt,proto3" json:"enrolled_at,omitempty"`
	UserAgent          string                 `protobuf:"bytes,11,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	IpAddress          string                 `protobuf:"bytes,12,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
}

func (x *DeviceEnrollment) Reset() {
	*x = DeviceEnrollment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEnrollment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEnrollment) ProtoMessage() {}

func (x *DeviceEnrollment) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEnrollment.ProtoReflect.Descriptor instead.
func (*DeviceEnrollment) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceEnrollment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceEnrollment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeviceEnrollment) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *DeviceEnrollment) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DeviceEnrollment) GetDeviceTypeId() string {
	if x != nil {
		return x.DeviceTypeId
	}
	return ""
}

func (x *DeviceEnrollment) GetDeviceCredentialId() string {
	if x != nil {
		return x.DeviceCredentialId
	}
	return ""
}

func (x *DeviceEnrollment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeviceEnrollment) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *DeviceEnrollment) GetApprovedByUserId() string {
	if x != nil {
		return x.ApprovedByUserId
	}
	return ""
}

func (x *DeviceEnrollment) GetEnrolledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EnrolledAt
	}
	return nil
}

func (x *DeviceEnrollment) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *DeviceEnrollment) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

// A DeviceCredential is a user's device-specific credential.
type DeviceCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	DeletedAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	DeviceTypeId       string                 `protobuf:"bytes,5,opt,name=device_type_id,json=deviceTypeId,proto3" json:"device_type_id,omitempty"`
	DeviceEnrollmentId string                 `protobuf:"bytes,6,opt,name=device_enrollment_id,json=deviceEnrollmentId,proto3" json:"device_enrollment_id,omitempty"`
	UserId             string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Types that are assignable to Specifier:
	//	*DeviceCredential_Webauthn
	Specifier isDeviceCredential_Specifier `protobuf_oneof:"specifier"`
}

func (x *DeviceCredential) Reset() {
	*x = DeviceCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCredential) ProtoMessage() {}

func (x *DeviceCredential) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCredential.ProtoReflect.Descriptor instead.
func (*DeviceCredential) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceCredential) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceCredential) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeviceCredential) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *DeviceCredential) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DeviceCredential) GetDeviceTypeId() string {
	if x != nil {
		return x.DeviceTypeId
	}
	return ""
}

func (x *DeviceCredential) GetDeviceEnrollmentId() string {
	if x != nil {
		return x.DeviceEnrollmentId
	}
	return ""
}

func (x *DeviceCredential) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (m *DeviceCredential) GetSpecifier() isDeviceCredential_Specifier {
	if m != nil {
		return m.Specifier
	}
	return nil
}

func (x *DeviceCredential) GetWebauthn() *DeviceCredential_WebAuthn {
	if x, ok := x.GetSpecifier().(*DeviceCredential_Webauthn); ok {
		return x.Webauthn
	}
	return nil
}

type isDeviceCredential_Specifier interface {
	isDeviceCredential_Specifier()
}

type DeviceCredential_Webauthn struct {
	Webauthn *DeviceCredential_WebAuthn `protobuf:"bytes,8,opt,name=webauthn,proto3,oneof"`
}

func (*DeviceCredential_Webauthn) isDeviceCredential_Specifier() {}

// A DeviceOwnerCredentialRecord is used to track credential owners to prevent
// credential re-use.
type DeviceOwnerCredentialRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId   []byte `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	PublicKey []byte `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *DeviceOwnerCredentialRecord) Reset() {
	*x = DeviceOwnerCredentialRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceOwnerCredentialRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceOwnerCredentialRecord) ProtoMessage() {}

func (x *DeviceOwnerCredentialRecord) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceOwnerCredentialRecord.ProtoReflect.Descriptor instead.
func (*DeviceOwnerCredentialRecord) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceOwnerCredentialRecord) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DeviceOwnerCredentialRecord) GetOwnerId() []byte {
	if x != nil {
		return x.OwnerId
	}
	return nil
}

func (x *DeviceOwnerCredentialRecord) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type ApproveDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//	*ApproveDeviceRequest_CredentialId
	//	*ApproveDeviceRequest_EnrollmentId
	Id isApproveDeviceRequest_Id `protobuf_oneof:"id"`
}

func (x *ApproveDeviceRequest) Reset() {
	*x = ApproveDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveDeviceRequest) ProtoMessage() {}

func (x *ApproveDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveDeviceRequest.ProtoReflect.Descriptor instead.
func (*ApproveDeviceRequest) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{5}
}

func (m *ApproveDeviceRequest) GetId() isApproveDeviceRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *ApproveDeviceRequest) GetCredentialId() string {
	if x, ok := x.GetId().(*ApproveDeviceRequest_CredentialId); ok {
		return x.CredentialId
	}
	return ""
}

func (x *ApproveDeviceRequest) GetEnrollmentId() string {
	if x, ok := x.GetId().(*ApproveDeviceRequest_EnrollmentId); ok {
		return x.EnrollmentId
	}
	return ""
}

type isApproveDeviceRequest_Id interface {
	isApproveDeviceRequest_Id()
}

type ApproveDeviceRequest_CredentialId struct {
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3,oneof"`
}

type ApproveDeviceRequest_EnrollmentId struct {
	EnrollmentId string `protobuf:"bytes,2,opt,name=enrollment_id,json=enrollmentId,proto3,oneof"`
}

func (*ApproveDeviceRequest_CredentialId) isApproveDeviceRequest_Id() {}

func (*ApproveDeviceRequest_EnrollmentId) isApproveDeviceRequest_Id() {}

type CreateDeviceEnrollmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enrollment  *DeviceEnrollment `protobuf:"bytes,1,opt,name=enrollment,proto3" json:"enrollment,omitempty"`
	RouteUrl    string            `protobuf:"bytes,3,opt,name=route_url,json=routeUrl,proto3" json:"route_url,omitempty"`
	RedirectUrl string            `protobuf:"bytes,2,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *CreateDeviceEnrollmentRequest) Reset() {
	*x = CreateDeviceEnrollmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceEnrollmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceEnrollmentRequest) ProtoMessage() {}

func (x *CreateDeviceEnrollmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceEnrollmentRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceEnrollmentRequest) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDeviceEnrollmentRequest) GetEnrollment() *DeviceEnrollment {
	if x != nil {
		return x.Enrollment
	}
	return nil
}

func (x *CreateDeviceEnrollmentRequest) GetRouteUrl() string {
	if x != nil {
		return x.RouteUrl
	}
	return ""
}

func (x *CreateDeviceEnrollmentRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type CreateDeviceEnrollmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enrollment    *DeviceEnrollment `protobuf:"bytes,1,opt,name=enrollment,proto3" json:"enrollment,omitempty"`
	EnrollmentUrl string            `protobuf:"bytes,2,opt,name=enrollment_url,json=enrollmentUrl,proto3" json:"enrollment_url,omitempty"`
}

func (x *CreateDeviceEnrollmentResponse) Reset() {
	*x = CreateDeviceEnrollmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceEnrollmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceEnrollmentResponse) ProtoMessage() {}

func (x *CreateDeviceEnrollmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceEnrollmentResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceEnrollmentResponse) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{7}
}

func (x *CreateDeviceEnrollmentResponse) GetEnrollment() *DeviceEnrollment {
	if x != nil {
		return x.Enrollment
	}
	return nil
}

func (x *CreateDeviceEnrollmentResponse) GetEnrollmentUrl() string {
	if x != nil {
		return x.EnrollmentUrl
	}
	return ""
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//	*DeleteDeviceRequest_CredentialId
	//	*DeleteDeviceRequest_EnrollmentId
	Id isDeleteDeviceRequest_Id `protobuf_oneof:"id"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{8}
}

func (m *DeleteDeviceRequest) GetId() isDeleteDeviceRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *DeleteDeviceRequest) GetCredentialId() string {
	if x, ok := x.GetId().(*DeleteDeviceRequest_CredentialId); ok {
		return x.CredentialId
	}
	return ""
}

func (x *DeleteDeviceRequest) GetEnrollmentId() string {
	if x, ok := x.GetId().(*DeleteDeviceRequest_EnrollmentId); ok {
		return x.EnrollmentId
	}
	return ""
}

type isDeleteDeviceRequest_Id interface {
	isDeleteDeviceRequest_Id()
}

type DeleteDeviceRequest_CredentialId struct {
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3,oneof"`
}

type DeleteDeviceRequest_EnrollmentId struct {
	EnrollmentId string `protobuf:"bytes,2,opt,name=enrollment_id,json=enrollmentId,proto3,oneof"`
}

func (*DeleteDeviceRequest_CredentialId) isDeleteDeviceRequest_Id() {}

func (*DeleteDeviceRequest_EnrollmentId) isDeleteDeviceRequest_Id() {}

type DeleteDeviceTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId string `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
}

func (x *DeleteDeviceTypeRequest) Reset() {
	*x = DeleteDeviceTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceTypeRequest) ProtoMessage() {}

func (x *DeleteDeviceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceTypeRequest) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDeviceTypeRequest) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

type ListDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *string `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3,oneof" json:"type_id,omitempty"`
	UserId     *string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ApprovedBy *string `protobuf:"bytes,3,opt,name=approved_by,json=approvedBy,proto3,oneof" json:"approved_by,omitempty"`
}

func (x *ListDevicesRequest) Reset() {
	*x = ListDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesRequest) ProtoMessage() {}

func (x *ListDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{10}
}

func (x *ListDevicesRequest) GetTypeId() string {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return ""
}

func (x *ListDevicesRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *ListDevicesRequest) GetApprovedBy() string {
	if x != nil && x.ApprovedBy != nil {
		return *x.ApprovedBy
	}
	return ""
}

type ListDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*ListDevicesResponse_Device `protobuf:"bytes,4,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *ListDevicesResponse) Reset() {
	*x = ListDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse) ProtoMessage() {}

func (x *ListDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{11}
}

func (x *ListDevicesResponse) GetDevices() []*ListDevicesResponse_Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type ListDeviceTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []*DeviceType `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *ListDeviceTypesResponse) Reset() {
	*x = ListDeviceTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceTypesResponse) ProtoMessage() {}

func (x *ListDeviceTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceTypesResponse.ProtoReflect.Descriptor instead.
func (*ListDeviceTypesResponse) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{12}
}

func (x *ListDeviceTypesResponse) GetTypes() []*DeviceType {
	if x != nil {
		return x.Types
	}
	return nil
}

type SetDeviceTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *DeviceType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SetDeviceTypeRequest) Reset() {
	*x = SetDeviceTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceTypeRequest) ProtoMessage() {}

func (x *SetDeviceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceTypeRequest.ProtoReflect.Descriptor instead.
func (*SetDeviceTypeRequest) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{13}
}

func (x *SetDeviceTypeRequest) GetType() *DeviceType {
	if x != nil {
		return x.Type
	}
	return nil
}

type SetDeviceTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *DeviceType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SetDeviceTypeResponse) Reset() {
	*x = SetDeviceTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceTypeResponse) ProtoMessage() {}

func (x *SetDeviceTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceTypeResponse.ProtoReflect.Descriptor instead.
func (*SetDeviceTypeResponse) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{14}
}

func (x *SetDeviceTypeResponse) GetType() *DeviceType {
	if x != nil {
		return x.Type
	}
	return nil
}

type WebAuthnOptions_AuthenticatorSelectionCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthenticatorAttachment *WebAuthnOptions_AuthenticatorAttachment     `protobuf:"varint,1,opt,name=authenticator_attachment,json=authenticatorAttachment,proto3,enum=pomerium.dashboard.WebAuthnOptions_AuthenticatorAttachment,oneof" json:"authenticator_attachment,omitempty"`
	RequireResidentKey      *bool                                        `protobuf:"varint,2,opt,name=require_resident_key,json=requireResidentKey,proto3,oneof" json:"require_resident_key,omitempty"`
	ResidentKeyRequirement  *WebAuthnOptions_ResidentKeyRequirement      `protobuf:"varint,3,opt,name=resident_key_requirement,json=residentKeyRequirement,proto3,enum=pomerium.dashboard.WebAuthnOptions_ResidentKeyRequirement,oneof" json:"resident_key_requirement,omitempty"`
	UserVerification        *WebAuthnOptions_UserVerificationRequirement `protobuf:"varint,4,opt,name=user_verification,json=userVerification,proto3,enum=pomerium.dashboard.WebAuthnOptions_UserVerificationRequirement,oneof" json:"user_verification,omitempty"`
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) Reset() {
	*x = WebAuthnOptions_AuthenticatorSelectionCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAuthnOptions_AuthenticatorSelectionCriteria) ProtoMessage() {}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAuthnOptions_AuthenticatorSelectionCriteria.ProtoReflect.Descriptor instead.
func (*WebAuthnOptions_AuthenticatorSelectionCriteria) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetAuthenticatorAttachment() WebAuthnOptions_AuthenticatorAttachment {
	if x != nil && x.AuthenticatorAttachment != nil {
		return *x.AuthenticatorAttachment
	}
	return WebAuthnOptions_PLATFORM
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetRequireResidentKey() bool {
	if x != nil && x.RequireResidentKey != nil {
		return *x.RequireResidentKey
	}
	return false
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetResidentKeyRequirement() WebAuthnOptions_ResidentKeyRequirement {
	if x != nil && x.ResidentKeyRequirement != nil {
		return *x.ResidentKeyRequirement
	}
	return WebAuthnOptions_RESIDENT_KEY_DISCOURAGED
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetUserVerification() WebAuthnOptions_UserVerificationRequirement {
	if x != nil && x.UserVerification != nil {
		return *x.UserVerification
	}
	return WebAuthnOptions_USER_VERIFICATION_DISCOURAGED
}

type WebAuthnOptions_PublicKeyCredentialParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alg  int64                                   `protobuf:"varint,1,opt,name=alg,proto3" json:"alg,omitempty"`
	Type WebAuthnOptions_PublicKeyCredentialType `protobuf:"varint,2,opt,name=type,proto3,enum=pomerium.dashboard.WebAuthnOptions_PublicKeyCredentialType" json:"type,omitempty"`
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) Reset() {
	*x = WebAuthnOptions_PublicKeyCredentialParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAuthnOptions_PublicKeyCredentialParameters) ProtoMessage() {}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAuthnOptions_PublicKeyCredentialParameters.ProtoReflect.Descriptor instead.
func (*WebAuthnOptions_PublicKeyCredentialParameters) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{0, 1}
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) GetAlg() int64 {
	if x != nil {
		return x.Alg
	}
	return 0
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) GetType() WebAuthnOptions_PublicKeyCredentialType {
	if x != nil {
		return x.Type
	}
	return WebAuthnOptions_PUBLIC_KEY
}

type DeviceType_WebAuthn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *WebAuthnOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *DeviceType_WebAuthn) Reset() {
	*x = DeviceType_WebAuthn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceType_WebAuthn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceType_WebAuthn) ProtoMessage() {}

func (x *DeviceType_WebAuthn) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceType_WebAuthn.ProtoReflect.Descriptor instead.
func (*DeviceType_WebAuthn) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DeviceType_WebAuthn) GetOptions() *WebAuthnOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type DeviceCredential_WebAuthn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// the options that were used to do initial registration
	RegisterOptions []byte `protobuf:"bytes,3,opt,name=register_options,json=registerOptions,proto3" json:"register_options,omitempty"`
	// the response returned from initial registration
	RegisterResponse []byte `protobuf:"bytes,4,opt,name=register_response,json=registerResponse,proto3" json:"register_response,omitempty"`
	// subsequent authenticate responses
	AuthenticateResponse [][]byte `protobuf:"bytes,5,rep,name=authenticate_response,json=authenticateResponse,proto3" json:"authenticate_response,omitempty"`
}

func (x *DeviceCredential_WebAuthn) Reset() {
	*x = DeviceCredential_WebAuthn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCredential_WebAuthn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCredential_WebAuthn) ProtoMessage() {}

func (x *DeviceCredential_WebAuthn) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCredential_WebAuthn.ProtoReflect.Descriptor instead.
func (*DeviceCredential_WebAuthn) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DeviceCredential_WebAuthn) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DeviceCredential_WebAuthn) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *DeviceCredential_WebAuthn) GetRegisterOptions() []byte {
	if x != nil {
		return x.RegisterOptions
	}
	return nil
}

func (x *DeviceCredential_WebAuthn) GetRegisterResponse() []byte {
	if x != nil {
		return x.RegisterResponse
	}
	return nil
}

func (x *DeviceCredential_WebAuthn) GetAuthenticateResponse() [][]byte {
	if x != nil {
		return x.AuthenticateResponse
	}
	return nil
}

type ListDevicesResponse_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               *DeviceType       `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Credential         *DeviceCredential `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	Enrollment         *DeviceEnrollment `protobuf:"bytes,3,opt,name=enrollment,proto3" json:"enrollment,omitempty"`
	Kind               DeviceKind        `protobuf:"varint,4,opt,name=kind,proto3,enum=pomerium.dashboard.DeviceKind" json:"kind,omitempty"`
	UserName           string            `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ApprovedByUserName string            `protobuf:"bytes,6,opt,name=approved_by_user_name,json=approvedByUserName,proto3" json:"approved_by_user_name,omitempty"`
}

func (x *ListDevicesResponse_Device) Reset() {
	*x = ListDevicesResponse_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_devices_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesResponse_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse_Device) ProtoMessage() {}

func (x *ListDevicesResponse_Device) ProtoReflect() protoreflect.Message {
	mi := &file_devices_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse_Device.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse_Device) Descriptor() ([]byte, []int) {
	return file_devices_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListDevicesResponse_Device) GetType() *DeviceType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ListDevicesResponse_Device) GetCredential() *DeviceCredential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *ListDevicesResponse_Device) GetEnrollment() *DeviceEnrollment {
	if x != nil {
		return x.Enrollment
	}
	return nil
}

func (x *ListDevicesResponse_Device) GetKind() DeviceKind {
	if x != nil {
		return x.Kind
	}
	return DeviceKind_UNKNOWN
}

func (x *ListDevicesResponse_Device) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListDevicesResponse_Device) GetApprovedByUserName() string {
	if x != nil {
		return x.ApprovedByUserName
	}
	return ""
}

var File_devices_proto protoreflect.FileDescriptor

var file_devices_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x83, 0x0c, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6a, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x79, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x80, 0x01, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x48, 0x01, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x70, 0x0a, 0x13, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x10, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xab, 0x04, 0x0a, 0x1e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x7b, 0x0a, 0x18, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x17, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a,
	0x18, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3a, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x02, 0x52, 0x16, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x71, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x03, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x82, 0x01, 0x0a, 0x1d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x6c, 0x67, 0x12, 0x4f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x41,
	0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x1f, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x79, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x10, 0x03,
	0x22, 0x3b, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x52, 0x4f,
	0x53, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x02, 0x22, 0x29, 0x0a,
	0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x00, 0x22, 0x6d, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x52, 0x41, 0x47, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x4f, 0x55, 0x52, 0x41, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1a, 0x0a, 0x18, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x08, 0x77, 0x65, 0x62, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x77, 0x65, 0x62, 0x61,
	0x75, 0x74, 0x68, 0x6e, 0x1a, 0x49, 0x0a, 0x08, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e,
	0x12, 0x3d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x0b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xad, 0x04, 0x0a,
	0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe9, 0x04, 0x0a,
	0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x61, 0x75, 0x74, 0x68,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69,
	0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x57, 0x65,
	0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x77, 0x65, 0x62, 0x61, 0x75, 0x74,
	0x68, 0x6e, 0x1a, 0xc6, 0x01, 0x0a, 0x08, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x1b, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x22, 0x6a, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0xa5, 0x01,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x65, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x69, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64,
	0x22, 0x32, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x22, 0xae, 0x03, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0xcc, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x0a,
	0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x2a, 0x55, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x49, 0x44, 0x4f, 0x5f, 0x55, 0x32, 0x46, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44,
	0x52, 0x4f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x50, 0x4d, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x49,
	0x4e, 0x44, 0x4f, 0x57, 0x53, 0x10, 0x05, 0x32, 0xab, 0x05, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7f, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x70,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6f, 0x6d,
	0x65, 0x72, 0x69, 0x75, 0x6d, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_devices_proto_rawDescOnce sync.Once
	file_devices_proto_rawDescData = file_devices_proto_rawDesc
)

func file_devices_proto_rawDescGZIP() []byte {
	file_devices_proto_rawDescOnce.Do(func() {
		file_devices_proto_rawDescData = protoimpl.X.CompressGZIP(file_devices_proto_rawDescData)
	})
	return file_devices_proto_rawDescData
}

var file_devices_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_devices_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_devices_proto_goTypes = []interface{}{
	(DeviceKind)(0), // 0: pomerium.dashboard.DeviceKind
	(WebAuthnOptions_AttestationConveyancePreference)(0),   // 1: pomerium.dashboard.WebAuthnOptions.AttestationConveyancePreference
	(WebAuthnOptions_AuthenticatorAttachment)(0),           // 2: pomerium.dashboard.WebAuthnOptions.AuthenticatorAttachment
	(WebAuthnOptions_PublicKeyCredentialType)(0),           // 3: pomerium.dashboard.WebAuthnOptions.PublicKeyCredentialType
	(WebAuthnOptions_ResidentKeyRequirement)(0),            // 4: pomerium.dashboard.WebAuthnOptions.ResidentKeyRequirement
	(WebAuthnOptions_UserVerificationRequirement)(0),       // 5: pomerium.dashboard.WebAuthnOptions.UserVerificationRequirement
	(*WebAuthnOptions)(nil),                                // 6: pomerium.dashboard.WebAuthnOptions
	(*DeviceType)(nil),                                     // 7: pomerium.dashboard.DeviceType
	(*DeviceEnrollment)(nil),                               // 8: pomerium.dashboard.DeviceEnrollment
	(*DeviceCredential)(nil),                               // 9: pomerium.dashboard.DeviceCredential
	(*DeviceOwnerCredentialRecord)(nil),                    // 10: pomerium.dashboard.DeviceOwnerCredentialRecord
	(*ApproveDeviceRequest)(nil),                           // 11: pomerium.dashboard.ApproveDeviceRequest
	(*CreateDeviceEnrollmentRequest)(nil),                  // 12: pomerium.dashboard.CreateDeviceEnrollmentRequest
	(*CreateDeviceEnrollmentResponse)(nil),                 // 13: pomerium.dashboard.CreateDeviceEnrollmentResponse
	(*DeleteDeviceRequest)(nil),                            // 14: pomerium.dashboard.DeleteDeviceRequest
	(*DeleteDeviceTypeRequest)(nil),                        // 15: pomerium.dashboard.DeleteDeviceTypeRequest
	(*ListDevicesRequest)(nil),                             // 16: pomerium.dashboard.ListDevicesRequest
	(*ListDevicesResponse)(nil),                            // 17: pomerium.dashboard.ListDevicesResponse
	(*ListDeviceTypesResponse)(nil),                        // 18: pomerium.dashboard.ListDeviceTypesResponse
	(*SetDeviceTypeRequest)(nil),                           // 19: pomerium.dashboard.SetDeviceTypeRequest
	(*SetDeviceTypeResponse)(nil),                          // 20: pomerium.dashboard.SetDeviceTypeResponse
	(*WebAuthnOptions_AuthenticatorSelectionCriteria)(nil), // 21: pomerium.dashboard.WebAuthnOptions.AuthenticatorSelectionCriteria
	(*WebAuthnOptions_PublicKeyCredentialParameters)(nil),  // 22: pomerium.dashboard.WebAuthnOptions.PublicKeyCredentialParameters
	(*DeviceType_WebAuthn)(nil),                            // 23: pomerium.dashboard.DeviceType.WebAuthn
	(*DeviceCredential_WebAuthn)(nil),                      // 24: pomerium.dashboard.DeviceCredential.WebAuthn
	(*ListDevicesResponse_Device)(nil),                     // 25: pomerium.dashboard.ListDevicesResponse.Device
	(*timestamppb.Timestamp)(nil),                          // 26: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                  // 27: google.protobuf.Empty
}
var file_devices_proto_depIdxs = []int32{
	1,  // 0: pomerium.dashboard.WebAuthnOptions.attestation:type_name -> pomerium.dashboard.WebAuthnOptions.AttestationConveyancePreference
	21, // 1: pomerium.dashboard.WebAuthnOptions.authenticator_selection:type_name -> pomerium.dashboard.WebAuthnOptions.AuthenticatorSelectionCriteria
	22, // 2: pomerium.dashboard.WebAuthnOptions.pub_key_cred_params:type_name -> pomerium.dashboard.WebAuthnOptions.PublicKeyCredentialParameters
	26, // 3: pomerium.dashboard.DeviceType.created_at:type_name -> google.protobuf.Timestamp
	26, // 4: pomerium.dashboard.DeviceType.modified_at:type_name -> google.protobuf.Timestamp
	26, // 5: pomerium.dashboard.DeviceType.deleted_at:type_name -> google.protobuf.Timestamp
	23, // 6: pomerium.dashboard.DeviceType.webauthn:type_name -> pomerium.dashboard.DeviceType.WebAuthn
	26, // 7: pomerium.dashboard.DeviceEnrollment.created_at:type_name -> google.protobuf.Timestamp
	26, // 8: pomerium.dashboard.DeviceEnrollment.modified_at:type_name -> google.protobuf.Timestamp
	26, // 9: pomerium.dashboard.DeviceEnrollment.deleted_at:type_name -> google.protobuf.Timestamp
	26, // 10: pomerium.dashboard.DeviceEnrollment.approved_at:type_name -> google.protobuf.Timestamp
	26, // 11: pomerium.dashboard.DeviceEnrollment.enrolled_at:type_name -> google.protobuf.Timestamp
	26, // 12: pomerium.dashboard.DeviceCredential.created_at:type_name -> google.protobuf.Timestamp
	26, // 13: pomerium.dashboard.DeviceCredential.modified_at:type_name -> google.protobuf.Timestamp
	26, // 14: pomerium.dashboard.DeviceCredential.deleted_at:type_name -> google.protobuf.Timestamp
	24, // 15: pomerium.dashboard.DeviceCredential.webauthn:type_name -> pomerium.dashboard.DeviceCredential.WebAuthn
	8,  // 16: pomerium.dashboard.CreateDeviceEnrollmentRequest.enrollment:type_name -> pomerium.dashboard.DeviceEnrollment
	8,  // 17: pomerium.dashboard.CreateDeviceEnrollmentResponse.enrollment:type_name -> pomerium.dashboard.DeviceEnrollment
	25, // 18: pomerium.dashboard.ListDevicesResponse.devices:type_name -> pomerium.dashboard.ListDevicesResponse.Device
	7,  // 19: pomerium.dashboard.ListDeviceTypesResponse.types:type_name -> pomerium.dashboard.DeviceType
	7,  // 20: pomerium.dashboard.SetDeviceTypeRequest.type:type_name -> pomerium.dashboard.DeviceType
	7,  // 21: pomerium.dashboard.SetDeviceTypeResponse.type:type_name -> pomerium.dashboard.DeviceType
	2,  // 22: pomerium.dashboard.WebAuthnOptions.AuthenticatorSelectionCriteria.authenticator_attachment:type_name -> pomerium.dashboard.WebAuthnOptions.AuthenticatorAttachment
	4,  // 23: pomerium.dashboard.WebAuthnOptions.AuthenticatorSelectionCriteria.resident_key_requirement:type_name -> pomerium.dashboard.WebAuthnOptions.ResidentKeyRequirement
	5,  // 24: pomerium.dashboard.WebAuthnOptions.AuthenticatorSelectionCriteria.user_verification:type_name -> pomerium.dashboard.WebAuthnOptions.UserVerificationRequirement
	3,  // 25: pomerium.dashboard.WebAuthnOptions.PublicKeyCredentialParameters.type:type_name -> pomerium.dashboard.WebAuthnOptions.PublicKeyCredentialType
	6,  // 26: pomerium.dashboard.DeviceType.WebAuthn.options:type_name -> pomerium.dashboard.WebAuthnOptions
	7,  // 27: pomerium.dashboard.ListDevicesResponse.Device.type:type_name -> pomerium.dashboard.DeviceType
	9,  // 28: pomerium.dashboard.ListDevicesResponse.Device.credential:type_name -> pomerium.dashboard.DeviceCredential
	8,  // 29: pomerium.dashboard.ListDevicesResponse.Device.enrollment:type_name -> pomerium.dashboard.DeviceEnrollment
	0,  // 30: pomerium.dashboard.ListDevicesResponse.Device.kind:type_name -> pomerium.dashboard.DeviceKind
	11, // 31: pomerium.dashboard.DeviceService.ApproveDevice:input_type -> pomerium.dashboard.ApproveDeviceRequest
	12, // 32: pomerium.dashboard.DeviceService.CreateDeviceEnrollment:input_type -> pomerium.dashboard.CreateDeviceEnrollmentRequest
	19, // 33: pomerium.dashboard.DeviceService.SetDeviceType:input_type -> pomerium.dashboard.SetDeviceTypeRequest
	14, // 34: pomerium.dashboard.DeviceService.DeleteDevice:input_type -> pomerium.dashboard.DeleteDeviceRequest
	15, // 35: pomerium.dashboard.DeviceService.DeleteDeviceType:input_type -> pomerium.dashboard.DeleteDeviceTypeRequest
	16, // 36: pomerium.dashboard.DeviceService.ListDevices:input_type -> pomerium.dashboard.ListDevicesRequest
	27, // 37: pomerium.dashboard.DeviceService.ListDeviceTypes:input_type -> google.protobuf.Empty
	27, // 38: pomerium.dashboard.DeviceService.ApproveDevice:output_type -> google.protobuf.Empty
	13, // 39: pomerium.dashboard.DeviceService.CreateDeviceEnrollment:output_type -> pomerium.dashboard.CreateDeviceEnrollmentResponse
	20, // 40: pomerium.dashboard.DeviceService.SetDeviceType:output_type -> pomerium.dashboard.SetDeviceTypeResponse
	27, // 41: pomerium.dashboard.DeviceService.DeleteDevice:output_type -> google.protobuf.Empty
	27, // 42: pomerium.dashboard.DeviceService.DeleteDeviceType:output_type -> google.protobuf.Empty
	17, // 43: pomerium.dashboard.DeviceService.ListDevices:output_type -> pomerium.dashboard.ListDevicesResponse
	18, // 44: pomerium.dashboard.DeviceService.ListDeviceTypes:output_type -> pomerium.dashboard.ListDeviceTypesResponse
	38, // [38:45] is the sub-list for method output_type
	31, // [31:38] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_devices_proto_init() }
func file_devices_proto_init() {
	if File_devices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_devices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAuthnOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEnrollment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceOwnerCredentialRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceEnrollmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceEnrollmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAuthnOptions_AuthenticatorSelectionCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAuthnOptions_PublicKeyCredentialParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType_WebAuthn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCredential_WebAuthn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_devices_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesResponse_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_devices_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_devices_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DeviceType_Webauthn)(nil),
	}
	file_devices_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*DeviceCredential_Webauthn)(nil),
	}
	file_devices_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ApproveDeviceRequest_CredentialId)(nil),
		(*ApproveDeviceRequest_EnrollmentId)(nil),
	}
	file_devices_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*DeleteDeviceRequest_CredentialId)(nil),
		(*DeleteDeviceRequest_EnrollmentId)(nil),
	}
	file_devices_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_devices_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_devices_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_devices_proto_goTypes,
		DependencyIndexes: file_devices_proto_depIdxs,
		EnumInfos:         file_devices_proto_enumTypes,
		MessageInfos:      file_devices_proto_msgTypes,
	}.Build()
	File_devices_proto = out.File
	file_devices_proto_rawDesc = nil
	file_devices_proto_goTypes = nil
	file_devices_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	ApproveDevice(ctx context.Context, in *ApproveDeviceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CreateDeviceEnrollment(ctx context.Context, in *CreateDeviceEnrollmentRequest, opts ...grpc.CallOption) (*CreateDeviceEnrollmentResponse, error)
	SetDeviceType(ctx context.Context, in *SetDeviceTypeRequest, opts ...grpc.CallOption) (*SetDeviceTypeResponse, error)
	DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteDeviceType(ctx context.Context, in *DeleteDeviceTypeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListDevices(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error)
	ListDeviceTypes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListDeviceTypesResponse, error)
}

type deviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceServiceClient(cc grpc.ClientConnInterface) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) ApproveDevice(ctx context.Context, in *ApproveDeviceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.DeviceService/ApproveDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) CreateDeviceEnrollment(ctx context.Context, in *CreateDeviceEnrollmentRequest, opts ...grpc.CallOption) (*CreateDeviceEnrollmentResponse, error) {
	out := new(CreateDeviceEnrollmentResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.DeviceService/CreateDeviceEnrollment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) SetDeviceType(ctx context.Context, in *SetDeviceTypeRequest, opts ...grpc.CallOption) (*SetDeviceTypeResponse, error) {
	out := new(SetDeviceTypeResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.DeviceService/SetDeviceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.DeviceService/DeleteDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) DeleteDeviceType(ctx context.Context, in *DeleteDeviceTypeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.DeviceService/DeleteDeviceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) ListDevices(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error) {
	out := new(ListDevicesResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.DeviceService/ListDevices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) ListDeviceTypes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListDeviceTypesResponse, error) {
	out := new(ListDeviceTypesResponse)
	err := c.cc.Invoke(ctx, "/pomerium.dashboard.DeviceService/ListDeviceTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	ApproveDevice(context.Context, *ApproveDeviceRequest) (*emptypb.Empty, error)
	CreateDeviceEnrollment(context.Context, *CreateDeviceEnrollmentRequest) (*CreateDeviceEnrollmentResponse, error)
	SetDeviceType(context.Context, *SetDeviceTypeRequest) (*SetDeviceTypeResponse, error)
	DeleteDevice(context.Context, *DeleteDeviceRequest) (*emptypb.Empty, error)
	DeleteDeviceType(context.Context, *DeleteDeviceTypeRequest) (*emptypb.Empty, error)
	ListDevices(context.Context, *ListDevicesRequest) (*ListDevicesResponse, error)
	ListDeviceTypes(context.Context, *emptypb.Empty) (*ListDeviceTypesResponse, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) ApproveDevice(context.Context, *ApproveDeviceRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveDevice not implemented")
}
func (*UnimplementedDeviceServiceServer) CreateDeviceEnrollment(context.Context, *CreateDeviceEnrollmentRequest) (*CreateDeviceEnrollmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeviceEnrollment not implemented")
}
func (*UnimplementedDeviceServiceServer) SetDeviceType(context.Context, *SetDeviceTypeRequest) (*SetDeviceTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceType not implemented")
}
func (*UnimplementedDeviceServiceServer) DeleteDevice(context.Context, *DeleteDeviceRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDevice not implemented")
}
func (*UnimplementedDeviceServiceServer) DeleteDeviceType(context.Context, *DeleteDeviceTypeRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeviceType not implemented")
}
func (*UnimplementedDeviceServiceServer) ListDevices(context.Context, *ListDevicesRequest) (*ListDevicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDevices not implemented")
}
func (*UnimplementedDeviceServiceServer) ListDeviceTypes(context.Context, *emptypb.Empty) (*ListDeviceTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceTypes not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_ApproveDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).ApproveDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.DeviceService/ApproveDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).ApproveDevice(ctx, req.(*ApproveDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_CreateDeviceEnrollment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceEnrollmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).CreateDeviceEnrollment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.DeviceService/CreateDeviceEnrollment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).CreateDeviceEnrollment(ctx, req.(*CreateDeviceEnrollmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_SetDeviceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).SetDeviceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.DeviceService/SetDeviceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).SetDeviceType(ctx, req.(*SetDeviceTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_DeleteDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).DeleteDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.DeviceService/DeleteDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).DeleteDevice(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_DeleteDeviceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).DeleteDeviceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.DeviceService/DeleteDeviceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).DeleteDeviceType(ctx, req.(*DeleteDeviceTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_ListDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).ListDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.DeviceService/ListDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).ListDevices(ctx, req.(*ListDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_ListDeviceTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).ListDeviceTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pomerium.dashboard.DeviceService/ListDeviceTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).ListDeviceTypes(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pomerium.dashboard.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApproveDevice",
			Handler:    _DeviceService_ApproveDevice_Handler,
		},
		{
			MethodName: "CreateDeviceEnrollment",
			Handler:    _DeviceService_CreateDeviceEnrollment_Handler,
		},
		{
			MethodName: "SetDeviceType",
			Handler:    _DeviceService_SetDeviceType_Handler,
		},
		{
			MethodName: "DeleteDevice",
			Handler:    _DeviceService_DeleteDevice_Handler,
		},
		{
			MethodName: "DeleteDeviceType",
			Handler:    _DeviceService_DeleteDeviceType_Handler,
		},
		{
			MethodName: "ListDevices",
			Handler:    _DeviceService_ListDevices_Handler,
		},
		{
			MethodName: "ListDeviceTypes",
			Handler:    _DeviceService_ListDeviceTypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "devices.proto",
}
