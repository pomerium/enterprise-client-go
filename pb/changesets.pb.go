// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: changesets.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Changeset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	DeployedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deployed_at,json=deployedAt,proto3" json:"deployed_at,omitempty"`
}

func (x *Changeset) Reset() {
	*x = Changeset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Changeset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changeset) ProtoMessage() {}

func (x *Changeset) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changeset.ProtoReflect.Descriptor instead.
func (*Changeset) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{0}
}

func (x *Changeset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Changeset) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Changeset) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *Changeset) GetDeployedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeployedAt
	}
	return nil
}

type ChangesetRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RecordId       string `protobuf:"bytes,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	RecordProtoMd5 string `protobuf:"bytes,3,opt,name=record_proto_md5,json=recordProtoMd5,proto3" json:"record_proto_md5,omitempty"`
	RecordProto    []byte `protobuf:"bytes,4,opt,name=record_proto,json=recordProto,proto3" json:"record_proto,omitempty"`
}

func (x *ChangesetRecord) Reset() {
	*x = ChangesetRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesetRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesetRecord) ProtoMessage() {}

func (x *ChangesetRecord) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesetRecord.ProtoReflect.Descriptor instead.
func (*ChangesetRecord) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{1}
}

func (x *ChangesetRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangesetRecord) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *ChangesetRecord) GetRecordProtoMd5() string {
	if x != nil {
		return x.RecordProtoMd5
	}
	return ""
}

func (x *ChangesetRecord) GetRecordProto() []byte {
	if x != nil {
		return x.RecordProto
	}
	return nil
}

type ChangesetWithRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Changeset *Changeset         `protobuf:"bytes,1,opt,name=changeset,proto3" json:"changeset,omitempty"`
	Records   []*ChangesetRecord `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ChangesetWithRecords) Reset() {
	*x = ChangesetWithRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesetWithRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesetWithRecords) ProtoMessage() {}

func (x *ChangesetWithRecords) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesetWithRecords.ProtoReflect.Descriptor instead.
func (*ChangesetWithRecords) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{2}
}

func (x *ChangesetWithRecords) GetChangeset() *Changeset {
	if x != nil {
		return x.Changeset
	}
	return nil
}

func (x *ChangesetWithRecords) GetRecords() []*ChangesetRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type ChangesetDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt             *timestamppb.Timestamp       `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt            *timestamppb.Timestamp       `protobuf:"bytes,3,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	DeployedAt            *timestamppb.Timestamp       `protobuf:"bytes,4,opt,name=deployed_at,json=deployedAt,proto3" json:"deployed_at,omitempty"`
	Approvers             []*ChangesetDetails_Approver `protobuf:"bytes,5,rep,name=approvers,proto3" json:"approvers,omitempty"`
	RequiredApprovalCount int64                        `protobuf:"varint,10,opt,name=required_approval_count,json=requiredApprovalCount,proto3" json:"required_approval_count,omitempty"`
	CanApprove            bool                         `protobuf:"varint,6,opt,name=can_approve,json=canApprove,proto3" json:"can_approve,omitempty"`
	CanDeploy             bool                         `protobuf:"varint,7,opt,name=can_deploy,json=canDeploy,proto3" json:"can_deploy,omitempty"`
	CanRollback           bool                         `protobuf:"varint,8,opt,name=can_rollback,json=canRollback,proto3" json:"can_rollback,omitempty"`
	LastChange            *ActivityLogEntry            `protobuf:"bytes,9,opt,name=last_change,json=lastChange,proto3,oneof" json:"last_change,omitempty"`
	Status                string                       `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChangesetDetails) Reset() {
	*x = ChangesetDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesetDetails) ProtoMessage() {}

func (x *ChangesetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesetDetails.ProtoReflect.Descriptor instead.
func (*ChangesetDetails) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{3}
}

func (x *ChangesetDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangesetDetails) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChangesetDetails) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *ChangesetDetails) GetDeployedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeployedAt
	}
	return nil
}

func (x *ChangesetDetails) GetApprovers() []*ChangesetDetails_Approver {
	if x != nil {
		return x.Approvers
	}
	return nil
}

func (x *ChangesetDetails) GetRequiredApprovalCount() int64 {
	if x != nil {
		return x.RequiredApprovalCount
	}
	return 0
}

func (x *ChangesetDetails) GetCanApprove() bool {
	if x != nil {
		return x.CanApprove
	}
	return false
}

func (x *ChangesetDetails) GetCanDeploy() bool {
	if x != nil {
		return x.CanDeploy
	}
	return false
}

func (x *ChangesetDetails) GetCanRollback() bool {
	if x != nil {
		return x.CanRollback
	}
	return false
}

func (x *ChangesetDetails) GetLastChange() *ActivityLogEntry {
	if x != nil {
		return x.LastChange
	}
	return nil
}

func (x *ChangesetDetails) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ApproveChangesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangesetId string `protobuf:"bytes,1,opt,name=changeset_id,json=changesetId,proto3" json:"changeset_id,omitempty"`
}

func (x *ApproveChangesetRequest) Reset() {
	*x = ApproveChangesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveChangesetRequest) ProtoMessage() {}

func (x *ApproveChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveChangesetRequest.ProtoReflect.Descriptor instead.
func (*ApproveChangesetRequest) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{4}
}

func (x *ApproveChangesetRequest) GetChangesetId() string {
	if x != nil {
		return x.ChangesetId
	}
	return ""
}

type DeployChangesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangesetId string `protobuf:"bytes,1,opt,name=changeset_id,json=changesetId,proto3" json:"changeset_id,omitempty"`
}

func (x *DeployChangesetRequest) Reset() {
	*x = DeployChangesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployChangesetRequest) ProtoMessage() {}

func (x *DeployChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployChangesetRequest.ProtoReflect.Descriptor instead.
func (*DeployChangesetRequest) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{5}
}

func (x *DeployChangesetRequest) GetChangesetId() string {
	if x != nil {
		return x.ChangesetId
	}
	return ""
}

type DiffChangesetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangesetId string `protobuf:"bytes,1,opt,name=changeset_id,json=changesetId,proto3" json:"changeset_id,omitempty"`
}

func (x *DiffChangesetRequest) Reset() {
	*x = DiffChangesetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffChangesetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffChangesetRequest) ProtoMessage() {}

func (x *DiffChangesetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffChangesetRequest.ProtoReflect.Descriptor instead.
func (*DiffChangesetRequest) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{6}
}

func (x *DiffChangesetRequest) GetChangesetId() string {
	if x != nil {
		return x.ChangesetId
	}
	return ""
}

type DiffChangesetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangesetRecords                  []*DiffChangesetResponse_Record `protobuf:"bytes,1,rep,name=changeset_records,json=changesetRecords,proto3" json:"changeset_records,omitempty"`
	CurrentlyDeployedChangesetRecords []*DiffChangesetResponse_Record `protobuf:"bytes,2,rep,name=currently_deployed_changeset_records,json=currentlyDeployedChangesetRecords,proto3" json:"currently_deployed_changeset_records,omitempty"`
}

func (x *DiffChangesetResponse) Reset() {
	*x = DiffChangesetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffChangesetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffChangesetResponse) ProtoMessage() {}

func (x *DiffChangesetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffChangesetResponse.ProtoReflect.Descriptor instead.
func (*DiffChangesetResponse) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{7}
}

func (x *DiffChangesetResponse) GetChangesetRecords() []*DiffChangesetResponse_Record {
	if x != nil {
		return x.ChangesetRecords
	}
	return nil
}

func (x *DiffChangesetResponse) GetCurrentlyDeployedChangesetRecords() []*DiffChangesetResponse_Record {
	if x != nil {
		return x.CurrentlyDeployedChangesetRecords
	}
	return nil
}

type ListChangesetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	OrderBy string `protobuf:"bytes,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListChangesetsRequest) Reset() {
	*x = ListChangesetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChangesetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesetsRequest) ProtoMessage() {}

func (x *ListChangesetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesetsRequest.ProtoReflect.Descriptor instead.
func (*ListChangesetsRequest) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{8}
}

func (x *ListChangesetsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListChangesetsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListChangesetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Changesets                    []*ChangesetDetails `protobuf:"bytes,1,rep,name=changesets,proto3" json:"changesets,omitempty"`
	CurrentlyDeployedChangesetId  *string             `protobuf:"bytes,2,opt,name=currently_deployed_changeset_id,json=currentlyDeployedChangesetId,proto3,oneof" json:"currently_deployed_changeset_id,omitempty"`
	PreviouslyDeployedChangesetId *string             `protobuf:"bytes,3,opt,name=previously_deployed_changeset_id,json=previouslyDeployedChangesetId,proto3,oneof" json:"previously_deployed_changeset_id,omitempty"`
}

func (x *ListChangesetsResponse) Reset() {
	*x = ListChangesetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChangesetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangesetsResponse) ProtoMessage() {}

func (x *ListChangesetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangesetsResponse.ProtoReflect.Descriptor instead.
func (*ListChangesetsResponse) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{9}
}

func (x *ListChangesetsResponse) GetChangesets() []*ChangesetDetails {
	if x != nil {
		return x.Changesets
	}
	return nil
}

func (x *ListChangesetsResponse) GetCurrentlyDeployedChangesetId() string {
	if x != nil && x.CurrentlyDeployedChangesetId != nil {
		return *x.CurrentlyDeployedChangesetId
	}
	return ""
}

func (x *ListChangesetsResponse) GetPreviouslyDeployedChangesetId() string {
	if x != nil && x.PreviouslyDeployedChangesetId != nil {
		return *x.PreviouslyDeployedChangesetId
	}
	return ""
}

type ChangesetDetails_Approver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email       string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	ApprovedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=approved_at,json=approvedAt,proto3" json:"approved_at,omitempty"`
}

func (x *ChangesetDetails_Approver) Reset() {
	*x = ChangesetDetails_Approver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesetDetails_Approver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesetDetails_Approver) ProtoMessage() {}

func (x *ChangesetDetails_Approver) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesetDetails_Approver.ProtoReflect.Descriptor instead.
func (*ChangesetDetails_Approver) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ChangesetDetails_Approver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangesetDetails_Approver) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ChangesetDetails_Approver) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ChangesetDetails_Approver) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

type DiffChangesetResponse_Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Json string `protobuf:"bytes,2,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *DiffChangesetResponse_Record) Reset() {
	*x = DiffChangesetResponse_Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_changesets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffChangesetResponse_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffChangesetResponse_Record) ProtoMessage() {}

func (x *DiffChangesetResponse_Record) ProtoReflect() protoreflect.Message {
	mi := &file_changesets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffChangesetResponse_Record.ProtoReflect.Descriptor instead.
func (*DiffChangesetResponse_Record) Descriptor() ([]byte, []int) {
	return file_changesets_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DiffChangesetResponse_Record) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiffChangesetResponse_Record) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

var File_changesets_proto protoreflect.FileDescriptor

var file_changesets_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b,
	0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0f,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x64, 0x35,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4d, 0x64, 0x35, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12,
	0x3d, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xc6,
	0x05, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x4a, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x1a, 0x90, 0x01, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x44, 0x69, 0x66, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0xa8, 0x02,
	0x0a, 0x15, 0x44, 0x69, 0x66, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x24, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x21, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x6c, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x2c, 0x0a, 0x06, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x22, 0xc1, 0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x1f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x1c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x4c, 0x0a, 0x20, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x1d, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x22, 0x0a,
	0x20, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x42, 0x23, 0x0a, 0x21, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x32, 0xd6, 0x03, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12,
	0x2b, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69,
	0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64, 0x0a, 0x0d, 0x44,
	0x69, 0x66, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x70,
	0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x66, 0x66,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x67, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f,
	0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2d,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_changesets_proto_rawDescOnce sync.Once
	file_changesets_proto_rawDescData = file_changesets_proto_rawDesc
)

func file_changesets_proto_rawDescGZIP() []byte {
	file_changesets_proto_rawDescOnce.Do(func() {
		file_changesets_proto_rawDescData = protoimpl.X.CompressGZIP(file_changesets_proto_rawDescData)
	})
	return file_changesets_proto_rawDescData
}

var file_changesets_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_changesets_proto_goTypes = []any{
	(*Changeset)(nil),                    // 0: pomerium.dashboard.Changeset
	(*ChangesetRecord)(nil),              // 1: pomerium.dashboard.ChangesetRecord
	(*ChangesetWithRecords)(nil),         // 2: pomerium.dashboard.ChangesetWithRecords
	(*ChangesetDetails)(nil),             // 3: pomerium.dashboard.ChangesetDetails
	(*ApproveChangesetRequest)(nil),      // 4: pomerium.dashboard.ApproveChangesetRequest
	(*DeployChangesetRequest)(nil),       // 5: pomerium.dashboard.DeployChangesetRequest
	(*DiffChangesetRequest)(nil),         // 6: pomerium.dashboard.DiffChangesetRequest
	(*DiffChangesetResponse)(nil),        // 7: pomerium.dashboard.DiffChangesetResponse
	(*ListChangesetsRequest)(nil),        // 8: pomerium.dashboard.ListChangesetsRequest
	(*ListChangesetsResponse)(nil),       // 9: pomerium.dashboard.ListChangesetsResponse
	(*ChangesetDetails_Approver)(nil),    // 10: pomerium.dashboard.ChangesetDetails.Approver
	(*DiffChangesetResponse_Record)(nil), // 11: pomerium.dashboard.DiffChangesetResponse.Record
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
	(*ActivityLogEntry)(nil),             // 13: pomerium.dashboard.ActivityLogEntry
	(*emptypb.Empty)(nil),                // 14: google.protobuf.Empty
}
var file_changesets_proto_depIdxs = []int32{
	12, // 0: pomerium.dashboard.Changeset.created_at:type_name -> google.protobuf.Timestamp
	12, // 1: pomerium.dashboard.Changeset.modified_at:type_name -> google.protobuf.Timestamp
	12, // 2: pomerium.dashboard.Changeset.deployed_at:type_name -> google.protobuf.Timestamp
	0,  // 3: pomerium.dashboard.ChangesetWithRecords.changeset:type_name -> pomerium.dashboard.Changeset
	1,  // 4: pomerium.dashboard.ChangesetWithRecords.records:type_name -> pomerium.dashboard.ChangesetRecord
	12, // 5: pomerium.dashboard.ChangesetDetails.created_at:type_name -> google.protobuf.Timestamp
	12, // 6: pomerium.dashboard.ChangesetDetails.modified_at:type_name -> google.protobuf.Timestamp
	12, // 7: pomerium.dashboard.ChangesetDetails.deployed_at:type_name -> google.protobuf.Timestamp
	10, // 8: pomerium.dashboard.ChangesetDetails.approvers:type_name -> pomerium.dashboard.ChangesetDetails.Approver
	13, // 9: pomerium.dashboard.ChangesetDetails.last_change:type_name -> pomerium.dashboard.ActivityLogEntry
	11, // 10: pomerium.dashboard.DiffChangesetResponse.changeset_records:type_name -> pomerium.dashboard.DiffChangesetResponse.Record
	11, // 11: pomerium.dashboard.DiffChangesetResponse.currently_deployed_changeset_records:type_name -> pomerium.dashboard.DiffChangesetResponse.Record
	3,  // 12: pomerium.dashboard.ListChangesetsResponse.changesets:type_name -> pomerium.dashboard.ChangesetDetails
	12, // 13: pomerium.dashboard.ChangesetDetails.Approver.approved_at:type_name -> google.protobuf.Timestamp
	4,  // 14: pomerium.dashboard.ChangesetService.ApproveChangeset:input_type -> pomerium.dashboard.ApproveChangesetRequest
	5,  // 15: pomerium.dashboard.ChangesetService.DeployChangeset:input_type -> pomerium.dashboard.DeployChangesetRequest
	6,  // 16: pomerium.dashboard.ChangesetService.DiffChangeset:input_type -> pomerium.dashboard.DiffChangesetRequest
	8,  // 17: pomerium.dashboard.ChangesetService.ListChangesets:input_type -> pomerium.dashboard.ListChangesetsRequest
	14, // 18: pomerium.dashboard.ChangesetService.RollbackChangeset:input_type -> google.protobuf.Empty
	14, // 19: pomerium.dashboard.ChangesetService.ApproveChangeset:output_type -> google.protobuf.Empty
	14, // 20: pomerium.dashboard.ChangesetService.DeployChangeset:output_type -> google.protobuf.Empty
	7,  // 21: pomerium.dashboard.ChangesetService.DiffChangeset:output_type -> pomerium.dashboard.DiffChangesetResponse
	9,  // 22: pomerium.dashboard.ChangesetService.ListChangesets:output_type -> pomerium.dashboard.ListChangesetsResponse
	14, // 23: pomerium.dashboard.ChangesetService.RollbackChangeset:output_type -> google.protobuf.Empty
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_changesets_proto_init() }
func file_changesets_proto_init() {
	if File_changesets_proto != nil {
		return
	}
	file_activity_log_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_changesets_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Changeset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ChangesetRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ChangesetWithRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ChangesetDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ApproveChangesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeployChangesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DiffChangesetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DiffChangesetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListChangesetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListChangesetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ChangesetDetails_Approver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_changesets_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DiffChangesetResponse_Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_changesets_proto_msgTypes[3].OneofWrappers = []any{}
	file_changesets_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_changesets_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_changesets_proto_goTypes,
		DependencyIndexes: file_changesets_proto_depIdxs,
		MessageInfos:      file_changesets_proto_msgTypes,
	}.Build()
	File_changesets_proto = out.File
	file_changesets_proto_rawDesc = nil
	file_changesets_proto_goTypes = nil
	file_changesets_proto_depIdxs = nil
}
