#!/bin/bash
set -euxo pipefail

_scripts_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
_root_dir="$(dirname "$_scripts_dir")"
_deps_dir="$_root_dir/deps"

readonly _git_deps=(
  "pomerium/pomerium-console|5d5e9378559607d7c7a073e053b128a7c6a31df9"
)

function clone() {
  local _name="$1"
  local _tag="$2"
  local _dst="$3"

  echo "cloning $_name:$_tag to $_dst"
  if [ ! -d "$_dst" ]; then
    mkdir -p "$_dst"
    (cd "$_dst" && git init && git remote add origin "git@github.com:$_name")
  fi
  (
    cd "$_dst"
    git fetch --depth=1 origin
    git switch --force-create dev "$_tag"
  )
}

function clone_all() {
  local _name _tag _dst
  for _dep in "${_git_deps[@]}"; do
    IFS=$'|' read -r _name _tag <<<"$_dep"
    _dst="$_deps_dir/github.com/$_name"
    clone "$_name" "$_tag" "$_dst"
  done
}

clone_all

_files=(
  activity_log
  clusters
  devices
  external_data_sources
  key_chain
  namespaces
  policy
  route_health_check
  route_redirect_action
  routes
  settings
  types
  users
)

for _f in "${_files[@]}"; do
  cp -f "$_deps_dir/github.com/pomerium/pomerium-console/pkg/pb/$_f"*.pb*.go "$_scripts_dir/../pb/"
done
go mod tidy
